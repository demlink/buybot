{"version":3,"file":"index.cjs","sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/@solana/spl-token/lib/esm/constants.js","../node_modules/@solana/buffer-layout/lib/Layout.js","../node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs","../node_modules/bigint-buffer/dist/browser.js","../node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs","../node_modules/@solana/buffer-layout-utils/lib/esm/native.mjs","../node_modules/@solana/buffer-layout-utils/lib/esm/web3.mjs","../node_modules/@solana/spl-token/lib/esm/errors.js","../node_modules/@solana/spl-token/lib/esm/extensions/accountType.js","../node_modules/@solana/spl-token/lib/esm/state/multisig.js","../node_modules/@solana/spl-token/lib/esm/state/account.js","../node_modules/@solana/spl-token/lib/esm/state/mint.js","../node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js","../src/error.ts","../src/int.ts","../node_modules/borsh/lib/esm/types.js","../node_modules/borsh/lib/esm/utils.js","../node_modules/borsh/lib/esm/buffer.js","../node_modules/borsh/lib/esm/serialize.js","../node_modules/borsh/lib/esm/deserialize.js","../node_modules/borsh/lib/esm/index.js","../src/instructions.ts","../src/nft/name-tokenizer.ts","../src/nft/index.ts","../src/state.ts","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/crypto.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/sha256.js","../src/constants.ts","../src/deprecated/utils.ts","../node_modules/@bonfida/sns-records/dist/index.mjs","../src/types/record.ts","../node_modules/graphemesplit/types.js","../node_modules/tiny-inflate/index.js","../node_modules/unicode-trie/swap.js","../node_modules/unicode-trie/index.js","../node_modules/js-base64/base64.js","../node_modules/graphemesplit/index.js","../src/utils.ts","../node_modules/bs58/node_modules/base-x/src/index.js","../node_modules/bs58/index.js","../node_modules/ipaddr.js/lib/ipaddr.js","../node_modules/punycode/punycode.es6.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/curves/esm/abstract/utils.js","../node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/@noble/curves/esm/abstract/edwards.js","../node_modules/@noble/curves/esm/ed25519.js","../node_modules/@scure/base/lib/esm/index.js","../src/record.ts","../src/record_v2/index.ts","../src/bindings.ts","../src/twitter_bindings.ts","../src/resolve.ts","../src/favorite-domain.ts","../src/types/custom-bg.ts","../src/custom-bg.ts","../src/devnet.ts","../src/record_v2/utils.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","import { PublicKey } from '@solana/web3.js';\n/** Address of the SPL Token program */\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n/** Address of the SPL Token 2022 program */\nexport const TOKEN_2022_PROGRAM_ID = new PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\n/** Address of the SPL Associated Token Account program */\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n/** Address of the special mint for wrapped native SOL in spl-token */\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\nexport const NATIVE_MINT_2022 = new PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\nexport function programSupportsExtensions(programId) {\n    if (programId === TOKEN_PROGRAM_ID) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\n//# sourceMappingURL=constants.js.map","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","export const encodeDecode = (layout) => {\n    const decode = layout.decode.bind(layout);\n    const encode = layout.encode.bind(layout);\n    return { decode, encode };\n};\n//# sourceMappingURL=base.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","import { blob } from '@solana/buffer-layout';\nimport { toBigIntBE, toBigIntLE, toBufferBE, toBufferLE } from 'bigint-buffer';\nimport { encodeDecode } from './base.mjs';\nexport const bigInt = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntLE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferLE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const bigIntBE = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntBE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferBE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const u64 = bigInt(8);\nexport const u64be = bigIntBE(8);\nexport const u128 = bigInt(16);\nexport const u128be = bigIntBE(16);\nexport const u192 = bigInt(24);\nexport const u192be = bigIntBE(24);\nexport const u256 = bigInt(32);\nexport const u256be = bigIntBE(32);\n//# sourceMappingURL=bigint.js.map","import { u8 } from '@solana/buffer-layout';\nimport { encodeDecode } from './base.mjs';\nexport const bool = (property) => {\n    const layout = u8(property);\n    const { encode, decode } = encodeDecode(layout);\n    const boolLayout = layout;\n    boolLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return !!src;\n    };\n    boolLayout.encode = (bool, buffer, offset) => {\n        const src = Number(bool);\n        return encode(src, buffer, offset);\n    };\n    return boolLayout;\n};\n//# sourceMappingURL=native.js.map","import { blob } from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { encodeDecode } from './base.mjs';\nexport const publicKey = (property) => {\n    const layout = blob(32, property);\n    const { encode, decode } = encodeDecode(layout);\n    const publicKeyLayout = layout;\n    publicKeyLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return new PublicKey(src);\n    };\n    publicKeyLayout.encode = (publicKey, buffer, offset) => {\n        const src = publicKey.toBuffer();\n        return encode(src, buffer, offset);\n    };\n    return publicKeyLayout;\n};\n//# sourceMappingURL=web3.js.map","/** Base class for errors */\nexport class TokenError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/** Thrown if an account is not found at the expected address */\nexport class TokenAccountNotFoundError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenAccountNotFoundError';\n    }\n}\n/** Thrown if a program state account is not a valid Account */\nexport class TokenInvalidAccountError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountError';\n    }\n}\n/** Thrown if a program state account does not contain valid data */\nexport class TokenInvalidAccountDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountDataError';\n    }\n}\n/** Thrown if a program state account is not owned by the expected token program */\nexport class TokenInvalidAccountOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountOwnerError';\n    }\n}\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nexport class TokenInvalidAccountSizeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountSizeError';\n    }\n}\n/** Thrown if the mint of a token account doesn't match the expected mint */\nexport class TokenInvalidMintError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidMintError';\n    }\n}\n/** Thrown if the owner of a token account doesn't match the expected owner */\nexport class TokenInvalidOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidOwnerError';\n    }\n}\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nexport class TokenOwnerOffCurveError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenOwnerOffCurveError';\n    }\n}\n/** Thrown if an instruction's program is invalid */\nexport class TokenInvalidInstructionProgramError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionProgramError';\n    }\n}\n/** Thrown if an instruction's keys are invalid */\nexport class TokenInvalidInstructionKeysError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionKeysError';\n    }\n}\n/** Thrown if an instruction's data is invalid */\nexport class TokenInvalidInstructionDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionDataError';\n    }\n}\n/** Thrown if an instruction's type is invalid */\nexport class TokenInvalidInstructionTypeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionTypeError';\n    }\n}\n/** Thrown if the program does not support the desired instruction */\nexport class TokenUnsupportedInstructionError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenUnsupportedInstructionError';\n    }\n}\n/** Thrown if the transfer hook extra accounts contains an invalid account index */\nexport class TokenTransferHookAccountNotFound extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookAccountNotFound';\n    }\n}\n/** Thrown if the transfer hook extra accounts contains an invalid seed */\nexport class TokenTransferHookInvalidSeed extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookInvalidSeed';\n    }\n}\n/** Thrown if account data required by an extra account meta seed config could not be fetched */\nexport class TokenTransferHookAccountDataNotFound extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookAccountDataNotFound';\n    }\n}\n//# sourceMappingURL=errors.js.map","export var AccountType;\n(function (AccountType) {\n    AccountType[AccountType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountType[AccountType[\"Mint\"] = 1] = \"Mint\";\n    AccountType[AccountType[\"Account\"] = 2] = \"Account\";\n})(AccountType || (AccountType = {}));\nexport const ACCOUNT_TYPE_SIZE = 1;\n//# sourceMappingURL=accountType.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError } from '../errors.js';\n/** Buffer layout for de/serializing a multisig */\nexport const MultisigLayout = struct([\n    u8('m'),\n    u8('n'),\n    bool('isInitialized'),\n    publicKey('signer1'),\n    publicKey('signer2'),\n    publicKey('signer3'),\n    publicKey('signer4'),\n    publicKey('signer5'),\n    publicKey('signer6'),\n    publicKey('signer7'),\n    publicKey('signer8'),\n    publicKey('signer9'),\n    publicKey('signer10'),\n    publicKey('signer11'),\n]);\n/** Byte length of a multisig */\nexport const MULTISIG_SIZE = MultisigLayout.span;\n/**\n * Retrieve information about a multisig\n *\n * @param connection Connection to use\n * @param address    Multisig account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Multisig information\n */\nexport async function getMultisig(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMultisig(address, info, programId);\n}\n/**\n * Unpack a multisig\n *\n * @param address   Multisig account\n * @param info      Multisig account data\n * @param programId SPL Token program account\n *\n * @return Unpacked multisig\n */\nexport function unpackMultisig(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length != MULTISIG_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const multisig = MultisigLayout.decode(info.data);\n    return { address, ...multisig };\n}\n/** Get the minimum lamport balance for a multisig to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMultisig(connection, commitment) {\n    return await connection.getMinimumBalanceForRentExemption(MULTISIG_SIZE, commitment);\n}\n//# sourceMappingURL=multisig.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getAccountLen } from '../extensions/extensionType.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Token account state as stored by the program */\nexport var AccountState;\n(function (AccountState) {\n    AccountState[AccountState[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountState[AccountState[\"Initialized\"] = 1] = \"Initialized\";\n    AccountState[AccountState[\"Frozen\"] = 2] = \"Frozen\";\n})(AccountState || (AccountState = {}));\n/** Buffer layout for de/serializing a token account */\nexport const AccountLayout = struct([\n    publicKey('mint'),\n    publicKey('owner'),\n    u64('amount'),\n    u32('delegateOption'),\n    publicKey('delegate'),\n    u8('state'),\n    u32('isNativeOption'),\n    u64('isNative'),\n    u64('delegatedAmount'),\n    u32('closeAuthorityOption'),\n    publicKey('closeAuthority'),\n]);\n/** Byte length of a token account */\nexport const ACCOUNT_SIZE = AccountLayout.span;\n/**\n * Retrieve information about a token account\n *\n * @param connection Connection to use\n * @param address    Token account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getAccount(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackAccount(address, info, programId);\n}\n/**\n * Retrieve information about multiple token accounts in a single RPC call\n *\n * @param connection Connection to use\n * @param addresses  Token accounts\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getMultipleAccounts(connection, addresses, commitment, programId = TOKEN_PROGRAM_ID) {\n    const infos = await connection.getMultipleAccountsInfo(addresses, commitment);\n    return addresses.map((address, i) => unpackAccount(address, infos[i], programId));\n}\n/** Get the minimum lamport balance for a base token account to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccount(connection, commitment) {\n    return await getMinimumBalanceForRentExemptAccountWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt token account with extensions\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccountWithExtensions(connection, extensions, commitment) {\n    const accountLen = getAccountLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(accountLen, commitment);\n}\n/**\n * Unpack a token account\n *\n * @param address   Token account\n * @param info      Token account data\n * @param programId SPL Token program account\n *\n * @return Unpacked token account\n */\nexport function unpackAccount(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < ACCOUNT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawAccount = AccountLayout.decode(info.data.slice(0, ACCOUNT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > ACCOUNT_SIZE) {\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Account)\n            throw new TokenInvalidAccountError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mint: rawAccount.mint,\n        owner: rawAccount.owner,\n        amount: rawAccount.amount,\n        delegate: rawAccount.delegateOption ? rawAccount.delegate : null,\n        delegatedAmount: rawAccount.delegatedAmount,\n        isInitialized: rawAccount.state !== AccountState.Uninitialized,\n        isFrozen: rawAccount.state === AccountState.Frozen,\n        isNative: !!rawAccount.isNativeOption,\n        rentExemptReserve: rawAccount.isNativeOption ? rawAccount.isNative : null,\n        closeAuthority: rawAccount.closeAuthorityOption ? rawAccount.closeAuthority : null,\n        tlvData,\n    };\n}\n//# sourceMappingURL=account.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, TokenInvalidMintError, TokenOwnerOffCurveError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getMintLen } from '../extensions/extensionType.js';\nimport { ACCOUNT_SIZE } from './account.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Buffer layout for de/serializing a mint */\nexport const MintLayout = struct([\n    u32('mintAuthorityOption'),\n    publicKey('mintAuthority'),\n    u64('supply'),\n    u8('decimals'),\n    bool('isInitialized'),\n    u32('freezeAuthorityOption'),\n    publicKey('freezeAuthority'),\n]);\n/** Byte length of a mint */\nexport const MINT_SIZE = MintLayout.span;\n/**\n * Retrieve information about a mint\n *\n * @param connection Connection to use\n * @param address    Mint account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Mint information\n */\nexport async function getMint(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMint(address, info, programId);\n}\n/**\n * Unpack a mint\n *\n * @param address   Mint account\n * @param info      Mint account data\n * @param programId SPL Token program account\n *\n * @return Unpacked mint\n */\nexport function unpackMint(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < MINT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawMint = MintLayout.decode(info.data.slice(0, MINT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > MINT_SIZE) {\n        if (info.data.length <= ACCOUNT_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Mint)\n            throw new TokenInvalidMintError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mintAuthority: rawMint.mintAuthorityOption ? rawMint.mintAuthority : null,\n        supply: rawMint.supply,\n        decimals: rawMint.decimals,\n        isInitialized: rawMint.isInitialized,\n        freezeAuthority: rawMint.freezeAuthorityOption ? rawMint.freezeAuthority : null,\n        tlvData,\n    };\n}\n/** Get the minimum lamport balance for a mint to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMint(connection, commitment) {\n    return await getMinimumBalanceForRentExemptMintWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt mint with extensions\n *\n * @param connection Connection to use\n * @param extensions Extension types included in the mint\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMintWithExtensions(connection, extensions, commitment) {\n    const mintLen = getMintLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(mintLen, commitment);\n}\n/**\n * Async version of getAssociatedTokenAddressSync\n * For backwards compatibility\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Promise containing the address of the associated token account\n */\nexport async function getAssociatedTokenAddress(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = await PublicKey.findProgramAddress([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n/**\n * Get the address of the associated token account for a given mint and owner\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Address of the associated token account\n */\nexport function getAssociatedTokenAddressSync(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = PublicKey.findProgramAddressSync([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n//# sourceMappingURL=mint.js.map","import { SystemProgram, TransactionInstruction } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\n/**\n * Construct a CreateAssociatedTokenAccount instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.alloc(0), programId, associatedTokenProgramId);\n}\n/**\n * Construct a CreateAssociatedTokenAccountIdempotent instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAssociatedTokenAccountIdempotentInstruction(payer, associatedToken, owner, mint, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.from([1]), programId, associatedTokenProgramId);\n}\nfunction buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, instructionData, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: payer, isSigner: true, isWritable: true },\n        { pubkey: associatedToken, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n        { pubkey: programId, isSigner: false, isWritable: false },\n    ];\n    return new TransactionInstruction({\n        keys,\n        programId: associatedTokenProgramId,\n        data: instructionData,\n    });\n}\n/**\n * Construct a RecoverNested instruction\n *\n * @param nestedAssociatedToken             Nested associated token account (must be owned by `ownerAssociatedToken`)\n * @param nestedMint                        Token mint for the nested associated token account\n * @param destinationAssociatedToken        Wallet's associated token account\n * @param ownerAssociatedToken              Owner associated token account address (must be owned by `owner`)\n * @param ownerMint                         Token mint for the owner associated token account\n * @param owner                             Wallet address for the owner associated token account\n * @param programId                         SPL Token program account\n * @param associatedTokenProgramId          SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createRecoverNestedInstruction(nestedAssociatedToken, nestedMint, destinationAssociatedToken, ownerAssociatedToken, ownerMint, owner, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: nestedAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: nestedMint, isSigner: false, isWritable: false },\n        { pubkey: destinationAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: ownerAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: ownerMint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: true, isWritable: true },\n        { pubkey: programId, isSigner: false, isWritable: false },\n    ];\n    return new TransactionInstruction({\n        keys,\n        programId: associatedTokenProgramId,\n        data: Buffer.from([2]),\n    });\n}\n//# sourceMappingURL=associatedTokenAccount.js.map",null,null,"export var integers = ['u8', 'u16', 'u32', 'u64', 'u128', 'i8', 'i16', 'i32', 'i64', 'i128', 'f32', 'f64'];\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { integers } from './types.js';\nexport function isArrayLike(value) {\n    // source: https://stackoverflow.com/questions/24048547/checking-if-an-object-is-array-like\n    return (Array.isArray(value) ||\n        (!!value &&\n            typeof value === 'object' &&\n            'length' in value &&\n            typeof (value.length) === 'number' &&\n            (value.length === 0 ||\n                (value.length > 0 &&\n                    (value.length - 1) in value))));\n}\nexport function expect_type(value, type, fieldPath) {\n    if (typeof (value) !== type) {\n        throw new Error(\"Expected \".concat(type, \" not \").concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexport function expect_bigint(value, fieldPath) {\n    var basicType = ['number', 'string', 'bigint', 'boolean'].includes(typeof (value));\n    var strObject = typeof (value) === 'object' && value !== null && 'toString' in value;\n    if (!basicType && !strObject) {\n        throw new Error(\"Expected bigint, number, boolean or string not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexport function expect_same_size(length, expected, fieldPath) {\n    if (length !== expected) {\n        throw new Error(\"Array length \".concat(length, \" does not match schema length \").concat(expected, \" at \").concat(fieldPath.join('.')));\n    }\n}\nexport function expect_enum(value, fieldPath) {\n    if (typeof (value) !== 'object' || value === null) {\n        throw new Error(\"Expected object not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\n// Validate Schema\nvar VALID_STRING_TYPES = integers.concat(['bool', 'string']);\nvar VALID_OBJECT_KEYS = ['option', 'enum', 'array', 'set', 'map', 'struct'];\nvar ErrorSchema = /** @class */ (function (_super) {\n    __extends(ErrorSchema, _super);\n    function ErrorSchema(schema, expected) {\n        var message = \"Invalid schema: \".concat(JSON.stringify(schema), \" expected \").concat(expected);\n        return _super.call(this, message) || this;\n    }\n    return ErrorSchema;\n}(Error));\nexport { ErrorSchema };\nexport function validate_schema(schema) {\n    if (typeof (schema) === 'string' && VALID_STRING_TYPES.includes(schema)) {\n        return;\n    }\n    if (schema && typeof (schema) === 'object') {\n        var keys = Object.keys(schema);\n        if (keys.length === 1 && VALID_OBJECT_KEYS.includes(keys[0])) {\n            var key = keys[0];\n            if (key === 'option')\n                return validate_schema(schema[key]);\n            if (key === 'enum')\n                return validate_enum_schema(schema[key]);\n            if (key === 'array')\n                return validate_array_schema(schema[key]);\n            if (key === 'set')\n                return validate_schema(schema[key]);\n            if (key === 'map')\n                return validate_map_schema(schema[key]);\n            if (key === 'struct')\n                return validate_struct_schema(schema[key]);\n        }\n    }\n    throw new ErrorSchema(schema, VALID_OBJECT_KEYS.join(', ') + ' or ' + VALID_STRING_TYPES.join(', '));\n}\nfunction validate_enum_schema(schema) {\n    if (!Array.isArray(schema))\n        throw new ErrorSchema(schema, 'Array');\n    for (var _i = 0, schema_1 = schema; _i < schema_1.length; _i++) {\n        var sch = schema_1[_i];\n        if (typeof sch !== 'object' || !('struct' in sch)) {\n            throw new Error('Missing \"struct\" key in enum schema');\n        }\n        if (typeof sch.struct !== 'object' || Object.keys(sch.struct).length !== 1) {\n            throw new Error('The \"struct\" in each enum must have a single key');\n        }\n        validate_schema({ struct: sch.struct });\n    }\n}\nfunction validate_array_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, '{ type, len? }');\n    if (schema.len && typeof schema.len !== 'number') {\n        throw new Error(\"Invalid schema: \".concat(schema));\n    }\n    if ('type' in schema)\n        return validate_schema(schema.type);\n    throw new ErrorSchema(schema, '{ type, len? }');\n}\nfunction validate_map_schema(schema) {\n    if (typeof schema === 'object' && 'key' in schema && 'value' in schema) {\n        validate_schema(schema.key);\n        validate_schema(schema.value);\n    }\n    else {\n        throw new ErrorSchema(schema, '{ key, value }');\n    }\n}\nfunction validate_struct_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, 'object');\n    for (var key in schema) {\n        validate_schema(schema[key]);\n    }\n}\n","var EncodeBuffer = /** @class */ (function () {\n    function EncodeBuffer() {\n        this.offset = 0;\n        this.buffer_size = 256;\n        this.buffer = new ArrayBuffer(this.buffer_size);\n        this.view = new DataView(this.buffer);\n    }\n    EncodeBuffer.prototype.resize_if_necessary = function (needed_space) {\n        if (this.buffer_size - this.offset < needed_space) {\n            this.buffer_size = Math.max(this.buffer_size * 2, this.buffer_size + needed_space);\n            var new_buffer = new ArrayBuffer(this.buffer_size);\n            new Uint8Array(new_buffer).set(new Uint8Array(this.buffer));\n            this.buffer = new_buffer;\n            this.view = new DataView(new_buffer);\n        }\n    };\n    EncodeBuffer.prototype.get_used_buffer = function () {\n        return new Uint8Array(this.buffer).slice(0, this.offset);\n    };\n    EncodeBuffer.prototype.store_value = function (value, type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.resize_if_necessary(size);\n        var toCall = type[0] === 'f' ? \"setFloat\".concat(bSize) : type[0] === 'i' ? \"setInt\".concat(bSize) : \"setUint\".concat(bSize);\n        this.view[toCall](this.offset, value, true);\n        this.offset += size;\n    };\n    EncodeBuffer.prototype.store_bytes = function (from) {\n        this.resize_if_necessary(from.length);\n        new Uint8Array(this.buffer).set(new Uint8Array(from), this.offset);\n        this.offset += from.length;\n    };\n    return EncodeBuffer;\n}());\nexport { EncodeBuffer };\nvar DecodeBuffer = /** @class */ (function () {\n    function DecodeBuffer(buf) {\n        this.offset = 0;\n        this.buffer_size = buf.length;\n        this.buffer = new ArrayBuffer(buf.length);\n        new Uint8Array(this.buffer).set(buf);\n        this.view = new DataView(this.buffer);\n    }\n    DecodeBuffer.prototype.assert_enough_buffer = function (size) {\n        if (this.offset + size > this.buffer.byteLength) {\n            throw new Error('Error in schema, the buffer is smaller than expected');\n        }\n    };\n    DecodeBuffer.prototype.consume_value = function (type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.assert_enough_buffer(size);\n        var toCall = type[0] === 'f' ? \"getFloat\".concat(bSize) : type[0] === 'i' ? \"getInt\".concat(bSize) : \"getUint\".concat(bSize);\n        var ret = this.view[toCall](this.offset, true);\n        this.offset += size;\n        return ret;\n    };\n    DecodeBuffer.prototype.consume_bytes = function (size) {\n        this.assert_enough_buffer(size);\n        var ret = this.buffer.slice(this.offset, this.offset + size);\n        this.offset += size;\n        return ret;\n    };\n    return DecodeBuffer;\n}());\nexport { DecodeBuffer };\n","import { integers } from './types.js';\nimport { EncodeBuffer } from './buffer.js';\nimport * as utils from './utils.js';\nvar BorshSerializer = /** @class */ (function () {\n    function BorshSerializer(checkTypes) {\n        this.encoded = new EncodeBuffer();\n        this.fieldPath = ['value'];\n        this.checkTypes = checkTypes;\n    }\n    BorshSerializer.prototype.encode = function (value, schema) {\n        this.encode_value(value, schema);\n        return this.encoded.get_used_buffer();\n    };\n    BorshSerializer.prototype.encode_value = function (value, schema) {\n        if (typeof schema === 'string') {\n            if (integers.includes(schema))\n                return this.encode_integer(value, schema);\n            if (schema === 'string')\n                return this.encode_string(value);\n            if (schema === 'bool')\n                return this.encode_boolean(value);\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.encode_option(value, schema);\n            if ('enum' in schema)\n                return this.encode_enum(value, schema);\n            if ('array' in schema)\n                return this.encode_array(value, schema);\n            if ('set' in schema)\n                return this.encode_set(value, schema);\n            if ('map' in schema)\n                return this.encode_map(value, schema);\n            if ('struct' in schema)\n                return this.encode_struct(value, schema);\n        }\n    };\n    BorshSerializer.prototype.encode_integer = function (value, schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            this.checkTypes && utils.expect_type(value, 'number', this.fieldPath);\n            this.encoded.store_value(value, schema);\n        }\n        else {\n            this.checkTypes && utils.expect_bigint(value, this.fieldPath);\n            this.encode_bigint(BigInt(value), size);\n        }\n    };\n    BorshSerializer.prototype.encode_bigint = function (value, size) {\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(buffer_len);\n        for (var i = 0; i < buffer_len; i++) {\n            buffer[i] = Number(value & BigInt(0xff));\n            value = value >> BigInt(8);\n        }\n        this.encoded.store_bytes(new Uint8Array(buffer));\n    };\n    BorshSerializer.prototype.encode_string = function (value) {\n        this.checkTypes && utils.expect_type(value, 'string', this.fieldPath);\n        var _value = value;\n        // 4 bytes for length\n        this.encoded.store_value(_value.length, 'u32');\n        // string bytes\n        for (var i = 0; i < _value.length; i++) {\n            this.encoded.store_value(_value.charCodeAt(i), 'u8');\n        }\n    };\n    BorshSerializer.prototype.encode_boolean = function (value) {\n        this.checkTypes && utils.expect_type(value, 'boolean', this.fieldPath);\n        this.encoded.store_value(value ? 1 : 0, 'u8');\n    };\n    BorshSerializer.prototype.encode_option = function (value, schema) {\n        if (value === null || value === undefined) {\n            this.encoded.store_value(0, 'u8');\n        }\n        else {\n            this.encoded.store_value(1, 'u8');\n            this.encode_value(value, schema.option);\n        }\n    };\n    BorshSerializer.prototype.encode_enum = function (value, schema) {\n        this.checkTypes && utils.expect_enum(value, this.fieldPath);\n        var valueKey = Object.keys(value)[0];\n        for (var i = 0; i < schema[\"enum\"].length; i++) {\n            var valueSchema = schema[\"enum\"][i];\n            if (valueKey === Object.keys(valueSchema.struct)[0]) {\n                this.encoded.store_value(i, 'u8');\n                return this.encode_struct(value, valueSchema);\n            }\n        }\n        throw new Error(\"Enum key (\".concat(valueKey, \") not found in enum schema: \").concat(JSON.stringify(schema), \" at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_array = function (value, schema) {\n        if (utils.isArrayLike(value))\n            return this.encode_arraylike(value, schema);\n        if (value instanceof ArrayBuffer)\n            return this.encode_buffer(value, schema);\n        throw new Error(\"Expected Array-like not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_arraylike = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.length, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.length, 'u32');\n        }\n        // array values\n        for (var i = 0; i < value.length; i++) {\n            this.encode_value(value[i], schema.array.type);\n        }\n    };\n    BorshSerializer.prototype.encode_buffer = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.byteLength, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.byteLength, 'u32');\n        }\n        // array values\n        this.encoded.store_bytes(new Uint8Array(value));\n    };\n    BorshSerializer.prototype.encode_set = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isSet = value instanceof Set;\n        var values = isSet ? Array.from(value.values()) : Object.values(value);\n        // 4 bytes for length\n        this.encoded.store_value(values.length, 'u32');\n        // set values\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var value_1 = values_1[_i];\n            this.encode_value(value_1, schema.set);\n        }\n    };\n    BorshSerializer.prototype.encode_map = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isMap = value instanceof Map;\n        var keys = isMap ? Array.from(value.keys()) : Object.keys(value);\n        // 4 bytes for length\n        this.encoded.store_value(keys.length, 'u32');\n        // store key/values\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this.encode_value(key, schema.map.key);\n            this.encode_value(isMap ? value.get(key) : value[key], schema.map.value);\n        }\n    };\n    BorshSerializer.prototype.encode_struct = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        for (var _i = 0, _a = Object.keys(schema.struct); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.fieldPath.push(key);\n            this.encode_value(value[key], schema.struct[key]);\n            this.fieldPath.pop();\n        }\n    };\n    return BorshSerializer;\n}());\nexport { BorshSerializer };\n","import { integers } from './types.js';\nimport { DecodeBuffer } from './buffer.js';\nvar BorshDeserializer = /** @class */ (function () {\n    function BorshDeserializer(bufferArray) {\n        this.buffer = new DecodeBuffer(bufferArray);\n    }\n    BorshDeserializer.prototype.decode = function (schema) {\n        return this.decode_value(schema);\n    };\n    BorshDeserializer.prototype.decode_value = function (schema) {\n        if (typeof schema === 'string') {\n            if (integers.includes(schema))\n                return this.decode_integer(schema);\n            if (schema === 'string')\n                return this.decode_string();\n            if (schema === 'bool')\n                return this.decode_boolean();\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.decode_option(schema);\n            if ('enum' in schema)\n                return this.decode_enum(schema);\n            if ('array' in schema)\n                return this.decode_array(schema);\n            if ('set' in schema)\n                return this.decode_set(schema);\n            if ('map' in schema)\n                return this.decode_map(schema);\n            if ('struct' in schema)\n                return this.decode_struct(schema);\n        }\n        throw new Error(\"Unsupported type: \".concat(schema));\n    };\n    BorshDeserializer.prototype.decode_integer = function (schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            return this.buffer.consume_value(schema);\n        }\n        return this.decode_bigint(size, schema.startsWith('i'));\n    };\n    BorshDeserializer.prototype.decode_bigint = function (size, signed) {\n        if (signed === void 0) { signed = false; }\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(this.buffer.consume_bytes(buffer_len));\n        var bits = buffer.reduceRight(function (r, x) { return r + x.toString(16).padStart(2, '0'); }, '');\n        if (signed && buffer[buffer_len - 1]) {\n            return BigInt.asIntN(size, BigInt(\"0x\".concat(bits)));\n        }\n        return BigInt(\"0x\".concat(bits));\n    };\n    BorshDeserializer.prototype.decode_string = function () {\n        var len = this.decode_integer('u32');\n        var buffer = new Uint8Array(this.buffer.consume_bytes(len));\n        return String.fromCharCode.apply(null, buffer);\n    };\n    BorshDeserializer.prototype.decode_boolean = function () {\n        return this.buffer.consume_value('u8') > 0;\n    };\n    BorshDeserializer.prototype.decode_option = function (schema) {\n        var option = this.buffer.consume_value('u8');\n        if (option === 1) {\n            return this.decode_value(schema.option);\n        }\n        if (option !== 0) {\n            throw new Error(\"Invalid option \".concat(option));\n        }\n        return null;\n    };\n    BorshDeserializer.prototype.decode_enum = function (schema) {\n        var _a;\n        var valueIndex = this.buffer.consume_value('u8');\n        if (valueIndex > schema[\"enum\"].length) {\n            throw new Error(\"Enum option \".concat(valueIndex, \" is not available\"));\n        }\n        var struct = schema[\"enum\"][valueIndex].struct;\n        var key = Object.keys(struct)[0];\n        return _a = {}, _a[key] = this.decode_value(struct[key]), _a;\n    };\n    BorshDeserializer.prototype.decode_array = function (schema) {\n        var result = [];\n        var len = schema.array.len ? schema.array.len : this.decode_integer('u32');\n        for (var i = 0; i < len; ++i) {\n            result.push(this.decode_value(schema.array.type));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_set = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Set();\n        for (var i = 0; i < len; ++i) {\n            result.add(this.decode_value(schema.set));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_map = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Map();\n        for (var i = 0; i < len; ++i) {\n            var key = this.decode_value(schema.map.key);\n            var value = this.decode_value(schema.map.value);\n            result.set(key, value);\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_struct = function (schema) {\n        var result = {};\n        for (var key in schema.struct) {\n            result[key] = this.decode_value(schema.struct[key]);\n        }\n        return result;\n    };\n    return BorshDeserializer;\n}());\nexport { BorshDeserializer };\n","import { BorshSerializer } from './serialize.js';\nimport { BorshDeserializer } from './deserialize.js';\nimport * as utils from './utils.js';\nexport function serialize(schema, value, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var serializer = new BorshSerializer(validate);\n    return serializer.encode(value, schema);\n}\nexport function deserialize(schema, buffer, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var deserializer = new BorshDeserializer(buffer);\n    return deserializer.decode(schema);\n}\n",null,null,null,null,"function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!isBytes(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!isBytes(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        if (!isBytes(a))\n            throw new Error('Uint8Array expected');\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map",null,null,"import{TransactionInstruction as e,PublicKey as t,SystemProgram as r}from\"@solana/web3.js\";var i,n=[\"u8\",\"u16\",\"u32\",\"u64\",\"u128\",\"i8\",\"i16\",\"i32\",\"i64\",\"i128\",\"f32\",\"f64\"],s=function(){function e(){this.offset=0,this.buffer_size=256,this.buffer=new ArrayBuffer(this.buffer_size),this.view=new DataView(this.buffer)}return e.prototype.resize_if_necessary=function(e){if(this.buffer_size-this.offset<e){this.buffer_size=Math.max(2*this.buffer_size,this.buffer_size+e);var t=new ArrayBuffer(this.buffer_size);new Uint8Array(t).set(new Uint8Array(this.buffer)),this.buffer=t,this.view=new DataView(t)}},e.prototype.get_used_buffer=function(){return new Uint8Array(this.buffer).slice(0,this.offset)},e.prototype.store_value=function(e,t){var r=t.substring(1),i=parseInt(r)/8;this.resize_if_necessary(i);var n=\"f\"===t[0]?\"setFloat\".concat(r):\"i\"===t[0]?\"setInt\".concat(r):\"setUint\".concat(r);this.view[n](this.offset,e,!0),this.offset+=i},e.prototype.store_bytes=function(e){this.resize_if_necessary(e.length),new Uint8Array(this.buffer).set(new Uint8Array(e),this.offset),this.offset+=e.length},e}(),o=function(){function e(e){this.offset=0,this.buffer_size=e.length,this.buffer=new ArrayBuffer(e.length),new Uint8Array(this.buffer).set(e),this.view=new DataView(this.buffer)}return e.prototype.assert_enough_buffer=function(e){if(this.offset+e>this.buffer.byteLength)throw new Error(\"Error in schema, the buffer is smaller than expected\")},e.prototype.consume_value=function(e){var t=e.substring(1),r=parseInt(t)/8;this.assert_enough_buffer(r);var i=\"f\"===e[0]?\"getFloat\".concat(t):\"i\"===e[0]?\"getInt\".concat(t):\"getUint\".concat(t),n=this.view[i](this.offset,!0);return this.offset+=r,n},e.prototype.consume_bytes=function(e){this.assert_enough_buffer(e);var t=this.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t},e}(),a=(i=function(e,t){return i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},i(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});function u(e,t,r){if(typeof e!==t)throw new Error(\"Expected \".concat(t,\" not \").concat(typeof e,\"(\").concat(e,\") at \").concat(r.join(\".\")))}function c(e,t,r){if(e!==t)throw new Error(\"Array length \".concat(e,\" does not match schema length \").concat(t,\" at \").concat(r.join(\".\")))}var h=n.concat([\"bool\",\"string\"]),f=[\"option\",\"enum\",\"array\",\"set\",\"map\",\"struct\"],p=function(e){function t(t,r){var i=\"Invalid schema: \".concat(JSON.stringify(t),\" expected \").concat(r);return e.call(this,i)||this}return a(t,e),t}(Error);function l(e){if(\"string\"!=typeof e||!h.includes(e)){if(e&&\"object\"==typeof e){var t=Object.keys(e);if(1===t.length&&f.includes(t[0])){var r=t[0];if(\"option\"===r)return l(e[r]);if(\"enum\"===r)return function(e){if(!Array.isArray(e))throw new p(e,\"Array\");for(var t=0,r=e;t<r.length;t++){var i=r[t];if(\"object\"!=typeof i||!(\"struct\"in i))throw new Error('Missing \"struct\" key in enum schema');if(\"object\"!=typeof i.struct||1!==Object.keys(i.struct).length)throw new Error('The \"struct\" in each enum must have a single key');l({struct:i.struct})}}(e[r]);if(\"array\"===r)return function(e){if(\"object\"!=typeof e)throw new p(e,\"{ type, len? }\");if(e.len&&\"number\"!=typeof e.len)throw new Error(\"Invalid schema: \".concat(e));if(\"type\"in e)return l(e.type);throw new p(e,\"{ type, len? }\")}(e[r]);if(\"set\"===r)return l(e[r]);if(\"map\"===r)return function(e){if(\"object\"!=typeof e||!(\"key\"in e)||!(\"value\"in e))throw new p(e,\"{ key, value }\");l(e.key),l(e.value)}(e[r]);if(\"struct\"===r)return function(e){if(\"object\"!=typeof e)throw new p(e,\"object\");for(var t in e)l(e[t])}(e[r])}}throw new p(e,f.join(\", \")+\" or \"+h.join(\", \"))}}var d=function(){function e(e){this.encoded=new s,this.fieldPath=[\"value\"],this.checkTypes=e}return e.prototype.encode=function(e,t){return this.encode_value(e,t),this.encoded.get_used_buffer()},e.prototype.encode_value=function(e,t){if(\"string\"==typeof t){if(n.includes(t))return this.encode_integer(e,t);if(\"string\"===t)return this.encode_string(e);if(\"bool\"===t)return this.encode_boolean(e)}if(\"object\"==typeof t){if(\"option\"in t)return this.encode_option(e,t);if(\"enum\"in t)return this.encode_enum(e,t);if(\"array\"in t)return this.encode_array(e,t);if(\"set\"in t)return this.encode_set(e,t);if(\"map\"in t)return this.encode_map(e,t);if(\"struct\"in t)return this.encode_struct(e,t)}},e.prototype.encode_integer=function(e,t){var r=parseInt(t.substring(1));r<=32||\"f64\"==t?(this.checkTypes&&u(e,\"number\",this.fieldPath),this.encoded.store_value(e,t)):(this.checkTypes&&function(e,t){if(!([\"number\",\"string\",\"bigint\",\"boolean\"].includes(typeof e)||\"object\"==typeof e&&null!==e&&\"toString\"in e))throw new Error(\"Expected bigint, number, boolean or string not \".concat(typeof e,\"(\").concat(e,\") at \").concat(t.join(\".\")))}(e,this.fieldPath),this.encode_bigint(BigInt(e),r))},e.prototype.encode_bigint=function(e,t){for(var r=t/8,i=new Uint8Array(r),n=0;n<r;n++)i[n]=Number(e&BigInt(255)),e>>=BigInt(8);this.encoded.store_bytes(new Uint8Array(i))},e.prototype.encode_string=function(e){this.checkTypes&&u(e,\"string\",this.fieldPath);var t=e;this.encoded.store_value(t.length,\"u32\");for(var r=0;r<t.length;r++)this.encoded.store_value(t.charCodeAt(r),\"u8\")},e.prototype.encode_boolean=function(e){this.checkTypes&&u(e,\"boolean\",this.fieldPath),this.encoded.store_value(e?1:0,\"u8\")},e.prototype.encode_option=function(e,t){null==e?this.encoded.store_value(0,\"u8\"):(this.encoded.store_value(1,\"u8\"),this.encode_value(e,t.option))},e.prototype.encode_enum=function(e,t){this.checkTypes&&function(e,t){if(\"object\"!=typeof e||null===e)throw new Error(\"Expected object not \".concat(typeof e,\"(\").concat(e,\") at \").concat(t.join(\".\")))}(e,this.fieldPath);for(var r=Object.keys(e)[0],i=0;i<t.enum.length;i++){var n=t.enum[i];if(r===Object.keys(n.struct)[0])return this.encoded.store_value(i,\"u8\"),this.encode_struct(e,n)}throw new Error(\"Enum key (\".concat(r,\") not found in enum schema: \").concat(JSON.stringify(t),\" at \").concat(this.fieldPath.join(\".\")))},e.prototype.encode_array=function(e,t){if(function(e){return Array.isArray(e)||!!e&&\"object\"==typeof e&&\"length\"in e&&\"number\"==typeof e.length&&(0===e.length||e.length>0&&e.length-1 in e)}(e))return this.encode_arraylike(e,t);if(e instanceof ArrayBuffer)return this.encode_buffer(e,t);throw new Error(\"Expected Array-like not \".concat(typeof e,\"(\").concat(e,\") at \").concat(this.fieldPath.join(\".\")))},e.prototype.encode_arraylike=function(e,t){t.array.len?c(e.length,t.array.len,this.fieldPath):this.encoded.store_value(e.length,\"u32\");for(var r=0;r<e.length;r++)this.encode_value(e[r],t.array.type)},e.prototype.encode_buffer=function(e,t){t.array.len?c(e.byteLength,t.array.len,this.fieldPath):this.encoded.store_value(e.byteLength,\"u32\"),this.encoded.store_bytes(new Uint8Array(e))},e.prototype.encode_set=function(e,t){this.checkTypes&&u(e,\"object\",this.fieldPath);var r=e instanceof Set?Array.from(e.values()):Object.values(e);this.encoded.store_value(r.length,\"u32\");for(var i=0,n=r;i<n.length;i++){var s=n[i];this.encode_value(s,t.set)}},e.prototype.encode_map=function(e,t){this.checkTypes&&u(e,\"object\",this.fieldPath);var r=e instanceof Map,i=r?Array.from(e.keys()):Object.keys(e);this.encoded.store_value(i.length,\"u32\");for(var n=0,s=i;n<s.length;n++){var o=s[n];this.encode_value(o,t.map.key),this.encode_value(r?e.get(o):e[o],t.map.value)}},e.prototype.encode_struct=function(e,t){this.checkTypes&&u(e,\"object\",this.fieldPath);for(var r=0,i=Object.keys(t.struct);r<i.length;r++){var n=i[r];this.fieldPath.push(n),this.encode_value(e[n],t.struct[n]),this.fieldPath.pop()}},e}(),y=function(){function e(e){this.buffer=new o(e)}return e.prototype.decode=function(e){return this.decode_value(e)},e.prototype.decode_value=function(e){if(\"string\"==typeof e){if(n.includes(e))return this.decode_integer(e);if(\"string\"===e)return this.decode_string();if(\"bool\"===e)return this.decode_boolean()}if(\"object\"==typeof e){if(\"option\"in e)return this.decode_option(e);if(\"enum\"in e)return this.decode_enum(e);if(\"array\"in e)return this.decode_array(e);if(\"set\"in e)return this.decode_set(e);if(\"map\"in e)return this.decode_map(e);if(\"struct\"in e)return this.decode_struct(e)}throw new Error(\"Unsupported type: \".concat(e))},e.prototype.decode_integer=function(e){var t=parseInt(e.substring(1));return t<=32||\"f64\"==e?this.buffer.consume_value(e):this.decode_bigint(t,e.startsWith(\"i\"))},e.prototype.decode_bigint=function(e,t){void 0===t&&(t=!1);var r=e/8,i=new Uint8Array(this.buffer.consume_bytes(r)),n=i.reduceRight((function(e,t){return e+t.toString(16).padStart(2,\"0\")}),\"\");return t&&i[r-1]?BigInt.asIntN(e,BigInt(\"0x\".concat(n))):BigInt(\"0x\".concat(n))},e.prototype.decode_string=function(){var e=this.decode_integer(\"u32\"),t=new Uint8Array(this.buffer.consume_bytes(e));return String.fromCharCode.apply(null,t)},e.prototype.decode_boolean=function(){return this.buffer.consume_value(\"u8\")>0},e.prototype.decode_option=function(e){var t=this.buffer.consume_value(\"u8\");if(1===t)return this.decode_value(e.option);if(0!==t)throw new Error(\"Invalid option \".concat(t));return null},e.prototype.decode_enum=function(e){var t,r=this.buffer.consume_value(\"u8\");if(r>e.enum.length)throw new Error(\"Enum option \".concat(r,\" is not available\"));var i=e.enum[r].struct,n=Object.keys(i)[0];return(t={})[n]=this.decode_value(i[n]),t},e.prototype.decode_array=function(e){for(var t=[],r=e.array.len?e.array.len:this.decode_integer(\"u32\"),i=0;i<r;++i)t.push(this.decode_value(e.array.type));return t},e.prototype.decode_set=function(e){for(var t=this.decode_integer(\"u32\"),r=new Set,i=0;i<t;++i)r.add(this.decode_value(e.set));return r},e.prototype.decode_map=function(e){for(var t=this.decode_integer(\"u32\"),r=new Map,i=0;i<t;++i){var n=this.decode_value(e.map.key),s=this.decode_value(e.map.value);r.set(n,s)}return r},e.prototype.decode_struct=function(e){var t={};for(var r in e.struct)t[r]=this.decode_value(e.struct[r]);return t},e}();function b(e,t,r){return void 0===r&&(r=!0),r&&l(e),new d(r).encode(t,e)}class g{constructor(e){this.tag=1,this.record=e.record,this.content=e.content}serialize(){return b(g.schema,this)}getInstruction(t,r,i,n,s,o,a,u){const c=Buffer.from(this.serialize());let h=[];return h.push({pubkey:r,isSigner:!1,isWritable:!1}),h.push({pubkey:i,isSigner:!1,isWritable:!1}),h.push({pubkey:n,isSigner:!0,isWritable:!0}),h.push({pubkey:s,isSigner:!1,isWritable:!0}),h.push({pubkey:o,isSigner:!1,isWritable:!0}),h.push({pubkey:a,isSigner:!0,isWritable:!0}),h.push({pubkey:u,isSigner:!1,isWritable:!1}),new e({keys:h,programId:t,data:c})}}g.schema={struct:{tag:\"u8\",record:\"string\",content:{array:{type:\"u8\"}}}};class _{constructor(e){this.tag=4,this.validation=e.validation,this.signature=e.signature,this.expectedPubkey=e.expectedPubkey}serialize(){return b(_.schema,this)}getInstruction(t,r,i,n,s,o,a,u){const c=Buffer.from(this.serialize());let h=[];return h.push({pubkey:r,isSigner:!1,isWritable:!1}),h.push({pubkey:i,isSigner:!1,isWritable:!1}),h.push({pubkey:n,isSigner:!0,isWritable:!0}),h.push({pubkey:s,isSigner:!1,isWritable:!0}),h.push({pubkey:o,isSigner:!1,isWritable:!0}),h.push({pubkey:a,isSigner:!0,isWritable:!0}),h.push({pubkey:u,isSigner:!1,isWritable:!1}),new e({keys:h,programId:t,data:c})}}_.schema={struct:{tag:\"u8\",validation:\"u8\",signature:{array:{type:\"u8\"}},expectedPubkey:{array:{type:\"u8\"}}}};class v{constructor(e){this.tag=0,this.contentLength=e.contentLength,this.record=e.record}serialize(){return b(v.schema,this)}getInstruction(t,r,i,n,s,o,a,u){const c=Buffer.from(this.serialize());let h=[];return h.push({pubkey:r,isSigner:!1,isWritable:!1}),h.push({pubkey:i,isSigner:!1,isWritable:!1}),h.push({pubkey:n,isSigner:!0,isWritable:!0}),h.push({pubkey:s,isSigner:!1,isWritable:!0}),h.push({pubkey:o,isSigner:!1,isWritable:!0}),h.push({pubkey:a,isSigner:!0,isWritable:!0}),h.push({pubkey:u,isSigner:!1,isWritable:!1}),new e({keys:h,programId:t,data:c})}}v.schema={struct:{tag:\"u8\",contentLength:\"u32\",record:\"string\"}};class m{constructor(e){this.tag=3,this.staleness=e.staleness}serialize(){return b(m.schema,this)}getInstruction(t,r,i,n,s,o,a,u,c){const h=Buffer.from(this.serialize());let f=[];return f.push({pubkey:r,isSigner:!1,isWritable:!1}),f.push({pubkey:i,isSigner:!1,isWritable:!1}),f.push({pubkey:n,isSigner:!0,isWritable:!0}),f.push({pubkey:s,isSigner:!1,isWritable:!0}),f.push({pubkey:o,isSigner:!1,isWritable:!0}),f.push({pubkey:a,isSigner:!1,isWritable:!0}),f.push({pubkey:u,isSigner:!1,isWritable:!1}),f.push({pubkey:c,isSigner:!0,isWritable:!0}),new e({keys:f,programId:t,data:h})}}m.schema={struct:{tag:\"u8\",staleness:\"bool\"}};class w{constructor(e){this.tag=2,this.record=e.record,this.content=e.content}serialize(){return b(w.schema,this)}getInstruction(t,r,i,n,s,o,a,u){const c=Buffer.from(this.serialize());let h=[];return h.push({pubkey:r,isSigner:!1,isWritable:!1}),h.push({pubkey:i,isSigner:!1,isWritable:!1}),h.push({pubkey:n,isSigner:!0,isWritable:!0}),h.push({pubkey:s,isSigner:!1,isWritable:!0}),h.push({pubkey:o,isSigner:!1,isWritable:!0}),h.push({pubkey:a,isSigner:!0,isWritable:!0}),h.push({pubkey:u,isSigner:!1,isWritable:!1}),new e({keys:h,programId:t,data:c})}}w.schema={struct:{tag:\"u8\",record:\"string\",content:{array:{type:\"u8\"}}}};class k{constructor(){this.tag=5}serialize(){return b(k.schema,this)}getInstruction(t,r,i,n,s,o,a,u){const c=Buffer.from(this.serialize());let h=[];return h.push({pubkey:r,isSigner:!1,isWritable:!1}),h.push({pubkey:i,isSigner:!1,isWritable:!1}),h.push({pubkey:n,isSigner:!0,isWritable:!0}),h.push({pubkey:s,isSigner:!1,isWritable:!0}),h.push({pubkey:o,isSigner:!1,isWritable:!0}),h.push({pubkey:a,isSigner:!0,isWritable:!0}),h.push({pubkey:u,isSigner:!1,isWritable:!1}),new e({keys:h,programId:t,data:c})}}k.schema={struct:{tag:\"u8\"}};class S{constructor(e){this.tag=6,this.roaId=e.roaId}serialize(){return b(S.schema,this)}getInstruction(t,r,i,n,s,o,a,u){const c=Buffer.from(this.serialize());let h=[];return h.push({pubkey:r,isSigner:!1,isWritable:!1}),h.push({pubkey:i,isSigner:!1,isWritable:!1}),h.push({pubkey:n,isSigner:!0,isWritable:!0}),h.push({pubkey:s,isSigner:!1,isWritable:!0}),h.push({pubkey:o,isSigner:!1,isWritable:!0}),h.push({pubkey:a,isSigner:!0,isWritable:!0}),h.push({pubkey:u,isSigner:!1,isWritable:!1}),new e({keys:h,programId:t,data:c})}}S.schema={struct:{tag:\"u8\",roaId:{array:{type:\"u8\"}}}};class I{constructor(){this.tag=7}serialize(){return b(I.schema,this)}getInstruction(t,r,i,n,s,o,a,u){const c=Buffer.from(this.serialize());let h=[];return h.push({pubkey:r,isSigner:!1,isWritable:!1}),h.push({pubkey:i,isSigner:!1,isWritable:!1}),h.push({pubkey:n,isSigner:!0,isWritable:!0}),h.push({pubkey:s,isSigner:!1,isWritable:!0}),h.push({pubkey:o,isSigner:!1,isWritable:!0}),h.push({pubkey:a,isSigner:!1,isWritable:!1}),h.push({pubkey:u,isSigner:!0,isWritable:!0}),new e({keys:h,programId:t,data:c})}}I.schema={struct:{tag:\"u8\"}};const W=new t(\"HP3D4D1ZCmohQGFVms2SS4LCANgJyksBf5s1F77FuFjZ\"),[A]=t.findProgramAddressSync([W.toBuffer()],W),j=(e,t,i,n,s,o,a,u)=>new g({record:o,content:Array.from(a)}).getInstruction(u,r.programId,s,e,t,i,n,A),z=(e,t,i,n,s,o,a,u)=>new v({contentLength:a,record:o}).getInstruction(u,r.programId,s,e,t,i,n,A),E=(e,t,i,n,s,o)=>(new k).getInstruction(o,r.programId,s,e,n,t,i,A),P=(e,t,i,n,s,o,a,u)=>new w({record:o,content:Array.from(a)}).getInstruction(u,r.programId,s,e,t,i,n,A),B=(e,t,i,n,s,o,a,u,c)=>new _({validation:o,signature:Array.from(a),expectedPubkey:Array.from(u)}).getInstruction(c,r.programId,s,e,t,i,n,A),O=(e,t,i,n,s,o,a,u)=>new m({staleness:a}).getInstruction(u,r.programId,o,e,t,i,n,A,s),U=(e,t,i,n,s,o,a)=>new S({roaId:Array.from(o.toBuffer())}).getInstruction(a,r.programId,t,e,i,n,s,A),x=(e,t,i,n,s,o)=>(new I).getInstruction(o,r.programId,t,e,i,n,A,s),L=96;var V;!function(e){e[e.None=0]=\"None\",e[e.Solana=1]=\"Solana\",e[e.Ethereum=2]=\"Ethereum\",e[e.UnverifiedSolana=3]=\"UnverifiedSolana\"}(V||(V={}));const N=e=>{switch(e){case V.None:return 0;case V.Ethereum:return 20;case V.Solana:case V.UnverifiedSolana:return 32;default:throw new Error(\"Invalid validation enum\")}};class T{constructor(e){this.stalenessValidation=e.stalenessValidation,this.rightOfAssociationValidation=e.rightOfAssociationValidation,this.contentLength=e.contentLength}static deserialize(e){return new T((t=this.schema,r=e,void 0===(i=!0)&&(i=!0),i&&l(t),new y(r).decode(t)));var t,r,i}static async retrieve(e,t){const r=await e.getAccountInfo(t);if(!r||!r.data)throw new Error(\"Record header account not found\");return this.deserialize(r.data.slice(96,96+this.LEN))}}T.LEN=8,T.schema={struct:{stalenessValidation:\"u16\",rightOfAssociationValidation:\"u16\",contentLength:\"u32\"}};class C{constructor(e,t){this.data=t,this.header=e}static deserialize(e){const t=T.deserialize(e.slice(96,96+T.LEN)),r=e.slice(96+T.LEN);return new C(t,r)}static async retrieve(e,t){const r=await e.getAccountInfo(t);if(!r||!r.data)throw new Error(\"Record header account not found\");return this.deserialize(r.data)}static async retrieveBatch(e,t){return(await e.getMultipleAccountsInfo(t)).map((e=>{if(null==e?void 0:e.data)return this.deserialize(e.data)}))}getContent(){let e=N(this.header.stalenessValidation)+N(this.header.rightOfAssociationValidation);return this.data.slice(e)}getStalenessId(){let e=N(this.header.stalenessValidation);return this.data.slice(0,e)}getRoAId(){let e=N(this.header.stalenessValidation),t=e+N(this.header.rightOfAssociationValidation);return this.data.slice(e,t)}}export{A as CENTRAL_STATE_SNS_RECORDS,L as NAME_REGISTRY_LEN,C as Record,T as RecordHeader,W as SNS_RECORDS_ID,V as Validation,j as allocateAndPostRecord,g as allocateAndPostRecordInstruction,z as allocateRecord,v as allocateRecordInstruction,E as deleteRecord,k as deleteRecordInstruction,P as editRecord,w as editRecordInstruction,N as getValidationLength,x as unverifyRoa,I as unverifyRoaInstruction,B as validateEthSignature,_ as validateEthereumSignatureInstruction,O as validateSolanaSignature,m as validateSolanaSignatureInstruction,U as writeRoa,S as writeRoaInstruction};\n//# sourceMappingURL=index.mjs.map\n",null,"module.exports = {\n  Other: 0,\n  CR: 1 << 0,\n  LF: 1 << 1,\n  Control: 1 << 2,\n  Extend: 1 << 3,\n  ZWJ: 1 << 4,\n  Regional_Indicator: 1 << 5,\n  Prepend: 1 << 6,\n  SpacingMark: 1 << 7,\n  L: 1 << 8,\n  V: 1 << 9,\n  T: 1 << 10,\n  LV: 1 << 11,\n  LVT: 1 << 12,\n  Extended_Pictographic: 1 << 13,\n};\n","var TINF_OK = 0;\nvar TINF_DATA_ERROR = -3;\n\nfunction Tree() {\n  this.table = new Uint16Array(16);   /* table of code length counts */\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n}\n\nfunction Data(source, dest) {\n  this.source = source;\n  this.sourceIndex = 0;\n  this.tag = 0;\n  this.bitcount = 0;\n  \n  this.dest = dest;\n  this.destLen = 0;\n  \n  this.ltree = new Tree();  /* dynamic length/symbol tree */\n  this.dtree = new Tree();  /* dynamic distance tree */\n}\n\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */\n\nvar sltree = new Tree();\nvar sdtree = new Tree();\n\n/* extra bits and base tables for length codes */\nvar length_bits = new Uint8Array(30);\nvar length_base = new Uint16Array(30);\n\n/* extra bits and base tables for distance codes */\nvar dist_bits = new Uint8Array(30);\nvar dist_base = new Uint16Array(30);\n\n/* special ordering of code length codes */\nvar clcidx = new Uint8Array([\n  16, 17, 18, 0, 8, 7, 9, 6,\n  10, 5, 11, 4, 12, 3, 13, 2,\n  14, 1, 15\n]);\n\n/* used by tinf_decode_trees, avoids allocations every call */\nvar code_tree = new Tree();\nvar lengths = new Uint8Array(288 + 32);\n\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */\n\n/* build extra bits and base tables */\nfunction tinf_build_bits_base(bits, base, delta, first) {\n  var i, sum;\n\n  /* build bits table */\n  for (i = 0; i < delta; ++i) bits[i] = 0;\n  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;\n\n  /* build base table */\n  for (sum = first, i = 0; i < 30; ++i) {\n    base[i] = sum;\n    sum += 1 << bits[i];\n  }\n}\n\n/* build the fixed huffman trees */\nfunction tinf_build_fixed_trees(lt, dt) {\n  var i;\n\n  /* build fixed length tree */\n  for (i = 0; i < 7; ++i) lt.table[i] = 0;\n\n  lt.table[7] = 24;\n  lt.table[8] = 152;\n  lt.table[9] = 112;\n\n  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\n  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\n  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\n  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\n\n  /* build fixed distance tree */\n  for (i = 0; i < 5; ++i) dt.table[i] = 0;\n\n  dt.table[5] = 32;\n\n  for (i = 0; i < 32; ++i) dt.trans[i] = i;\n}\n\n/* given an array of code lengths, build a tree */\nvar offs = new Uint16Array(16);\n\nfunction tinf_build_tree(t, lengths, off, num) {\n  var i, sum;\n\n  /* clear code length count table */\n  for (i = 0; i < 16; ++i) t.table[i] = 0;\n\n  /* scan symbol lengths, and sum code length counts */\n  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;\n\n  t.table[0] = 0;\n\n  /* compute offset table for distribution sort */\n  for (sum = 0, i = 0; i < 16; ++i) {\n    offs[i] = sum;\n    sum += t.table[i];\n  }\n\n  /* create code->symbol translation table (symbols sorted by code) */\n  for (i = 0; i < num; ++i) {\n    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\n  }\n}\n\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */\n\n/* get one bit from source stream */\nfunction tinf_getbit(d) {\n  /* check if tag is empty */\n  if (!d.bitcount--) {\n    /* load next tag */\n    d.tag = d.source[d.sourceIndex++];\n    d.bitcount = 7;\n  }\n\n  /* shift bit out of tag */\n  var bit = d.tag & 1;\n  d.tag >>>= 1;\n\n  return bit;\n}\n\n/* read a num bit value from a stream and add base */\nfunction tinf_read_bits(d, num, base) {\n  if (!num)\n    return base;\n\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n\n  var val = d.tag & (0xffff >>> (16 - num));\n  d.tag >>>= num;\n  d.bitcount -= num;\n  return val + base;\n}\n\n/* given a data stream and a tree, decode a symbol */\nfunction tinf_decode_symbol(d, t) {\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n  \n  var sum = 0, cur = 0, len = 0;\n  var tag = d.tag;\n\n  /* get more bits while code value is above sum */\n  do {\n    cur = 2 * cur + (tag & 1);\n    tag >>>= 1;\n    ++len;\n\n    sum += t.table[len];\n    cur -= t.table[len];\n  } while (cur >= 0);\n  \n  d.tag = tag;\n  d.bitcount -= len;\n\n  return t.trans[sum + cur];\n}\n\n/* given a data stream, decode dynamic trees from it */\nfunction tinf_decode_trees(d, lt, dt) {\n  var hlit, hdist, hclen;\n  var i, num, length;\n\n  /* get 5 bits HLIT (257-286) */\n  hlit = tinf_read_bits(d, 5, 257);\n\n  /* get 5 bits HDIST (1-32) */\n  hdist = tinf_read_bits(d, 5, 1);\n\n  /* get 4 bits HCLEN (4-19) */\n  hclen = tinf_read_bits(d, 4, 4);\n\n  for (i = 0; i < 19; ++i) lengths[i] = 0;\n\n  /* read code lengths for code length alphabet */\n  for (i = 0; i < hclen; ++i) {\n    /* get 3 bits code length (0-7) */\n    var clen = tinf_read_bits(d, 3, 0);\n    lengths[clcidx[i]] = clen;\n  }\n\n  /* build code length tree */\n  tinf_build_tree(code_tree, lengths, 0, 19);\n\n  /* decode code lengths for the dynamic trees */\n  for (num = 0; num < hlit + hdist;) {\n    var sym = tinf_decode_symbol(d, code_tree);\n\n    switch (sym) {\n      case 16:\n        /* copy previous code length 3-6 times (read 2 bits) */\n        var prev = lengths[num - 1];\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\n          lengths[num++] = prev;\n        }\n        break;\n      case 17:\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      case 18:\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      default:\n        /* values 0-15 represent the actual code lengths */\n        lengths[num++] = sym;\n        break;\n    }\n  }\n\n  /* build dynamic trees */\n  tinf_build_tree(lt, lengths, 0, hlit);\n  tinf_build_tree(dt, lengths, hlit, hdist);\n}\n\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */\n\n/* given a stream and two trees, inflate a block of data */\nfunction tinf_inflate_block_data(d, lt, dt) {\n  while (1) {\n    var sym = tinf_decode_symbol(d, lt);\n\n    /* check for end of block */\n    if (sym === 256) {\n      return TINF_OK;\n    }\n\n    if (sym < 256) {\n      d.dest[d.destLen++] = sym;\n    } else {\n      var length, dist, offs;\n      var i;\n\n      sym -= 257;\n\n      /* possibly get more bits from length code */\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n      dist = tinf_decode_symbol(d, dt);\n\n      /* possibly get more bits from distance code */\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n      /* copy match */\n      for (i = offs; i < offs + length; ++i) {\n        d.dest[d.destLen++] = d.dest[i];\n      }\n    }\n  }\n}\n\n/* inflate an uncompressed block of data */\nfunction tinf_inflate_uncompressed_block(d) {\n  var length, invlength;\n  var i;\n  \n  /* unread from bitbuffer */\n  while (d.bitcount > 8) {\n    d.sourceIndex--;\n    d.bitcount -= 8;\n  }\n\n  /* get length */\n  length = d.source[d.sourceIndex + 1];\n  length = 256 * length + d.source[d.sourceIndex];\n\n  /* get one's complement of length */\n  invlength = d.source[d.sourceIndex + 3];\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n  /* check length */\n  if (length !== (~invlength & 0x0000ffff))\n    return TINF_DATA_ERROR;\n\n  d.sourceIndex += 4;\n\n  /* copy block */\n  for (i = length; i; --i)\n    d.dest[d.destLen++] = d.source[d.sourceIndex++];\n\n  /* make sure we start next block on a byte boundary */\n  d.bitcount = 0;\n\n  return TINF_OK;\n}\n\n/* inflate stream from source to dest */\nfunction tinf_uncompress(source, dest) {\n  var d = new Data(source, dest);\n  var bfinal, btype, res;\n\n  do {\n    /* read final block flag */\n    bfinal = tinf_getbit(d);\n\n    /* read block type (2 bits) */\n    btype = tinf_read_bits(d, 2, 0);\n\n    /* decompress block */\n    switch (btype) {\n      case 0:\n        /* decompress uncompressed block */\n        res = tinf_inflate_uncompressed_block(d);\n        break;\n      case 1:\n        /* decompress block with fixed huffman trees */\n        res = tinf_inflate_block_data(d, sltree, sdtree);\n        break;\n      case 2:\n        /* decompress block with dynamic huffman trees */\n        tinf_decode_trees(d, d.ltree, d.dtree);\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n        break;\n      default:\n        res = TINF_DATA_ERROR;\n    }\n\n    if (res !== TINF_OK)\n      throw new Error('Data error');\n\n  } while (!bfinal);\n\n  if (d.destLen < d.dest.length) {\n    if (typeof d.dest.slice === 'function')\n      return d.dest.slice(0, d.destLen);\n    else\n      return d.dest.subarray(0, d.destLen);\n  }\n  \n  return d.dest;\n}\n\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */\n\n/* build fixed huffman trees */\ntinf_build_fixed_trees(sltree, sdtree);\n\n/* build extra bits and base tables */\ntinf_build_bits_base(length_bits, length_base, 4, 3);\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n/* fix a special case */\nlength_bits[28] = 0;\nlength_base[28] = 258;\n\nmodule.exports = tinf_uncompress;\n","const isBigEndian = (new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x12);\n\nconst swap = (b, n, m) => {\n  let i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n};\n\nconst swap32 = array => {\n  const len = array.length;\n  for (let i = 0; i < len; i += 4) {\n    swap(array, i, i + 3);\n    swap(array, i + 1, i + 2);\n  }\n};\n\nconst swap32LE = array => {\n  if (isBigEndian) {\n    swap32(array);\n  }\n};\n\nmodule.exports = {\n  swap32LE: swap32LE\n};\n","const inflate = require('tiny-inflate');\nconst { swap32LE } = require('./swap');\n\n// Shift size for getting the index-1 table offset.\nconst SHIFT_1 = 6 + 5;\n\n// Shift size for getting the index-2 table offset.\nconst SHIFT_2 = 5;\n\n// Difference between the two shift sizes,\n// for getting an index-1 offset from an index-2 offset. 6=11-5\nconst SHIFT_1_2 = SHIFT_1 - SHIFT_2;\n\n// Number of index-1 entries for the BMP. 32=0x20\n// This part of the index-1 table is omitted from the serialized form.\nconst OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> SHIFT_1;\n\n// Number of entries in an index-2 block. 64=0x40\nconst INDEX_2_BLOCK_LENGTH = 1 << SHIFT_1_2;\n\n// Mask for getting the lower bits for the in-index-2-block offset. */\nconst INDEX_2_MASK = INDEX_2_BLOCK_LENGTH - 1;\n\n// Shift size for shifting left the index array values.\n// Increases possible data size with 16-bit index values at the cost\n// of compactability.\n// This requires data blocks to be aligned by DATA_GRANULARITY.\nconst INDEX_SHIFT = 2;\n\n// Number of entries in a data block. 32=0x20\nconst DATA_BLOCK_LENGTH = 1 << SHIFT_2;\n\n// Mask for getting the lower bits for the in-data-block offset.\nconst DATA_MASK = DATA_BLOCK_LENGTH - 1;\n\n// The part of the index-2 table for U+D800..U+DBFF stores values for\n// lead surrogate code _units_ not code _points_.\n// Values for lead surrogate code _points_ are indexed with this portion of the table.\n// Length=32=0x20=0x400>>SHIFT_2. (There are 1024=0x400 lead surrogates.)\nconst LSCP_INDEX_2_OFFSET = 0x10000 >> SHIFT_2;\nconst LSCP_INDEX_2_LENGTH = 0x400 >> SHIFT_2;\n\n// Count the lengths of both BMP pieces. 2080=0x820\nconst INDEX_2_BMP_LENGTH = LSCP_INDEX_2_OFFSET + LSCP_INDEX_2_LENGTH;\n\n// The 2-byte UTF-8 version of the index-2 table follows at offset 2080=0x820.\n// Length 32=0x20 for lead bytes C0..DF, regardless of SHIFT_2.\nconst UTF8_2B_INDEX_2_OFFSET = INDEX_2_BMP_LENGTH;\nconst UTF8_2B_INDEX_2_LENGTH = 0x800 >> 6;  // U+0800 is the first code point after 2-byte UTF-8\n\n// The index-1 table, only used for supplementary code points, at offset 2112=0x840.\n// Variable length, for code points up to highStart, where the last single-value range starts.\n// Maximum length 512=0x200=0x100000>>SHIFT_1.\n// (For 0x100000 supplementary code points U+10000..U+10ffff.)\n//\n// The part of the index-2 table for supplementary code points starts\n// after this index-1 table.\n//\n// Both the index-1 table and the following part of the index-2 table\n// are omitted completely if there is only BMP data.\nconst INDEX_1_OFFSET = UTF8_2B_INDEX_2_OFFSET + UTF8_2B_INDEX_2_LENGTH;\n\n// The alignment size of a data block. Also the granularity for compaction.\nconst DATA_GRANULARITY = 1 << INDEX_SHIFT;\n\nclass UnicodeTrie {\n  constructor(data) {\n    const isBuffer = (typeof data.readUInt32BE === 'function') && (typeof data.slice === 'function');\n\n    if (isBuffer || data instanceof Uint8Array) {\n      // read binary format\n      let uncompressedLength;\n      if (isBuffer) {\n        this.highStart = data.readUInt32LE(0);\n        this.errorValue = data.readUInt32LE(4);\n        uncompressedLength = data.readUInt32LE(8);\n        data = data.slice(12);\n      } else {\n        const view = new DataView(data.buffer);\n        this.highStart = view.getUint32(0, true);\n        this.errorValue = view.getUint32(4, true);\n        uncompressedLength = view.getUint32(8, true);\n        data = data.subarray(12);\n      }\n\n      // double inflate the actual trie data\n      data = inflate(data, new Uint8Array(uncompressedLength));\n      data = inflate(data, new Uint8Array(uncompressedLength));\n\n      // swap bytes from little-endian\n      swap32LE(data);\n\n      this.data = new Uint32Array(data.buffer);\n\n    } else {\n      // pre-parsed data\n      ({ data: this.data, highStart: this.highStart, errorValue: this.errorValue } = data);\n    }\n  }\n\n  get(codePoint) {\n    let index;\n    if ((codePoint < 0) || (codePoint > 0x10ffff)) {\n      return this.errorValue;\n    }\n\n    if ((codePoint < 0xd800) || ((codePoint > 0xdbff) && (codePoint <= 0xffff))) {\n      // Ordinary BMP code point, excluding leading surrogates.\n      // BMP uses a single level lookup.  BMP index starts at offset 0 in the index.\n      // data is stored in the index array itself.\n      index = (this.data[codePoint >> SHIFT_2] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    if (codePoint <= 0xffff) {\n      // Lead Surrogate Code Point.  A Separate index section is stored for\n      // lead surrogate code units and code points.\n      //   The main index has the code unit data.\n      //   For this function, we need the code point data.\n      index = (this.data[LSCP_INDEX_2_OFFSET + ((codePoint - 0xd800) >> SHIFT_2)] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    if (codePoint < this.highStart) {\n      // Supplemental code point, use two-level lookup.\n      index = this.data[(INDEX_1_OFFSET - OMITTED_BMP_INDEX_1_LENGTH) + (codePoint >> SHIFT_1)];\n      index = this.data[index + ((codePoint >> SHIFT_2) & INDEX_2_MASK)];\n      index = (index << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    return this.data[this.data.length - DATA_GRANULARITY];\n  }\n}\n\nmodule.exports = UnicodeTrie;","//\n// THIS FILE IS AUTOMATICALLY GENERATED! DO NOT EDIT BY HAND!\n//\n;\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? module.exports = factory()\n        : typeof define === 'function' && define.amd\n            ? define(factory) :\n            // cf. https://github.com/dankogai/js-base64/issues/119\n            (function () {\n                // existing version for noConflict()\n                var _Base64 = global.Base64;\n                var gBase64 = factory();\n                gBase64.noConflict = function () {\n                    global.Base64 = _Base64;\n                    return gBase64;\n                };\n                if (global.Meteor) { // Meteor.js\n                    Base64 = gBase64;\n                }\n                global.Base64 = gBase64;\n            })();\n}((typeof self !== 'undefined' ? self\n    : typeof window !== 'undefined' ? window\n        : typeof global !== 'undefined' ? global\n            : this), function () {\n    'use strict';\n    /**\n     *  base64.ts\n     *\n     *  Licensed under the BSD 3-Clause License.\n     *    http://opensource.org/licenses/BSD-3-Clause\n     *\n     *  References:\n     *    http://en.wikipedia.org/wiki/Base64\n     *\n     * @author Dan Kogai (https://github.com/dankogai)\n     */\n    var version = '3.7.5';\n    /**\n     * @deprecated use lowercase `version`.\n     */\n    var VERSION = version;\n    var _hasatob = typeof atob === 'function';\n    var _hasbtoa = typeof btoa === 'function';\n    var _hasBuffer = typeof Buffer === 'function';\n    var _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\n    var _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\n    var b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var b64chs = Array.prototype.slice.call(b64ch);\n    var b64tab = (function (a) {\n        var tab = {};\n        a.forEach(function (c, i) { return tab[c] = i; });\n        return tab;\n    })(b64chs);\n    var b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\n    var _fromCC = String.fromCharCode.bind(String);\n    var _U8Afrom = typeof Uint8Array.from === 'function'\n        ? Uint8Array.from.bind(Uint8Array)\n        : function (it) { return new Uint8Array(Array.prototype.slice.call(it, 0)); };\n    var _mkUriSafe = function (src) { return src\n        .replace(/=/g, '').replace(/[+\\/]/g, function (m0) { return m0 == '+' ? '-' : '_'; }); };\n    var _tidyB64 = function (s) { return s.replace(/[^A-Za-z0-9\\+\\/]/g, ''); };\n    /**\n     * polyfill version of `btoa`\n     */\n    var btoaPolyfill = function (bin) {\n        // console.log('polyfilled');\n        var u32, c0, c1, c2, asc = '';\n        var pad = bin.length % 3;\n        for (var i = 0; i < bin.length;) {\n            if ((c0 = bin.charCodeAt(i++)) > 255 ||\n                (c1 = bin.charCodeAt(i++)) > 255 ||\n                (c2 = bin.charCodeAt(i++)) > 255)\n                throw new TypeError('invalid character found');\n            u32 = (c0 << 16) | (c1 << 8) | c2;\n            asc += b64chs[u32 >> 18 & 63]\n                + b64chs[u32 >> 12 & 63]\n                + b64chs[u32 >> 6 & 63]\n                + b64chs[u32 & 63];\n        }\n        return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n    };\n    /**\n     * does what `window.btoa` of web browsers do.\n     * @param {String} bin binary string\n     * @returns {string} Base64-encoded string\n     */\n    var _btoa = _hasbtoa ? function (bin) { return btoa(bin); }\n        : _hasBuffer ? function (bin) { return Buffer.from(bin, 'binary').toString('base64'); }\n            : btoaPolyfill;\n    var _fromUint8Array = _hasBuffer\n        ? function (u8a) { return Buffer.from(u8a).toString('base64'); }\n        : function (u8a) {\n            // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n            var maxargs = 0x1000;\n            var strs = [];\n            for (var i = 0, l = u8a.length; i < l; i += maxargs) {\n                strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n            }\n            return _btoa(strs.join(''));\n        };\n    /**\n     * converts a Uint8Array to a Base64 string.\n     * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n     * @returns {string} Base64 string\n     */\n    var fromUint8Array = function (u8a, urlsafe) {\n        if (urlsafe === void 0) { urlsafe = false; }\n        return urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n    };\n    // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n    // const utob = (src: string) => unescape(encodeURIComponent(src));\n    // reverting good old fationed regexp\n    var cb_utob = function (c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                    + _fromCC(0x80 | (cc & 0x3f)))\n                    : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                        + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                        + _fromCC(0x80 | (cc & 0x3f)));\n        }\n        else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n                + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n                + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                + _fromCC(0x80 | (cc & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    /**\n     * @deprecated should have been internal use only.\n     * @param {string} src UTF-8 string\n     * @returns {string} UTF-16 string\n     */\n    var utob = function (u) { return u.replace(re_utob, cb_utob); };\n    //\n    var _encode = _hasBuffer\n        ? function (s) { return Buffer.from(s, 'utf8').toString('base64'); }\n        : _TE\n            ? function (s) { return _fromUint8Array(_TE.encode(s)); }\n            : function (s) { return _btoa(utob(s)); };\n    /**\n     * converts a UTF-8-encoded string to a Base64 string.\n     * @param {boolean} [urlsafe] if `true` make the result URL-safe\n     * @returns {string} Base64 string\n     */\n    var encode = function (src, urlsafe) {\n        if (urlsafe === void 0) { urlsafe = false; }\n        return urlsafe\n            ? _mkUriSafe(_encode(src))\n            : _encode(src);\n    };\n    /**\n     * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n     * @returns {string} Base64 string\n     */\n    var encodeURI = function (src) { return encode(src, true); };\n    // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n    // const btou = (src: string) => decodeURIComponent(escape(src));\n    // reverting good old fationed regexp\n    var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n    var cb_btou = function (cccc) {\n        switch (cccc.length) {\n            case 4:\n                var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                    | ((0x3f & cccc.charCodeAt(1)) << 12)\n                    | ((0x3f & cccc.charCodeAt(2)) << 6)\n                    | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n                return (_fromCC((offset >>> 10) + 0xD800)\n                    + _fromCC((offset & 0x3FF) + 0xDC00));\n            case 3:\n                return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    | (0x3f & cccc.charCodeAt(2)));\n            default:\n                return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                    | (0x3f & cccc.charCodeAt(1)));\n        }\n    };\n    /**\n     * @deprecated should have been internal use only.\n     * @param {string} src UTF-16 string\n     * @returns {string} UTF-8 string\n     */\n    var btou = function (b) { return b.replace(re_btou, cb_btou); };\n    /**\n     * polyfill version of `atob`\n     */\n    var atobPolyfill = function (asc) {\n        // console.log('polyfilled');\n        asc = asc.replace(/\\s+/g, '');\n        if (!b64re.test(asc))\n            throw new TypeError('malformed base64.');\n        asc += '=='.slice(2 - (asc.length & 3));\n        var u24, bin = '', r1, r2;\n        for (var i = 0; i < asc.length;) {\n            u24 = b64tab[asc.charAt(i++)] << 18\n                | b64tab[asc.charAt(i++)] << 12\n                | (r1 = b64tab[asc.charAt(i++)]) << 6\n                | (r2 = b64tab[asc.charAt(i++)]);\n            bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n                : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                    : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n        }\n        return bin;\n    };\n    /**\n     * does what `window.atob` of web browsers do.\n     * @param {String} asc Base64-encoded string\n     * @returns {string} binary string\n     */\n    var _atob = _hasatob ? function (asc) { return atob(_tidyB64(asc)); }\n        : _hasBuffer ? function (asc) { return Buffer.from(asc, 'base64').toString('binary'); }\n            : atobPolyfill;\n    //\n    var _toUint8Array = _hasBuffer\n        ? function (a) { return _U8Afrom(Buffer.from(a, 'base64')); }\n        : function (a) { return _U8Afrom(_atob(a).split('').map(function (c) { return c.charCodeAt(0); })); };\n    /**\n     * converts a Base64 string to a Uint8Array.\n     */\n    var toUint8Array = function (a) { return _toUint8Array(_unURI(a)); };\n    //\n    var _decode = _hasBuffer\n        ? function (a) { return Buffer.from(a, 'base64').toString('utf8'); }\n        : _TD\n            ? function (a) { return _TD.decode(_toUint8Array(a)); }\n            : function (a) { return btou(_atob(a)); };\n    var _unURI = function (a) { return _tidyB64(a.replace(/[-_]/g, function (m0) { return m0 == '-' ? '+' : '/'; })); };\n    /**\n     * converts a Base64 string to a UTF-8 string.\n     * @param {String} src Base64 string.  Both normal and URL-safe are supported\n     * @returns {string} UTF-8 string\n     */\n    var decode = function (src) { return _decode(_unURI(src)); };\n    /**\n     * check if a value is a valid Base64 string\n     * @param {String} src a value to check\n      */\n    var isValid = function (src) {\n        if (typeof src !== 'string')\n            return false;\n        var s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n        return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n    };\n    //\n    var _noEnum = function (v) {\n        return {\n            value: v, enumerable: false, writable: true, configurable: true\n        };\n    };\n    /**\n     * extend String.prototype with relevant methods\n     */\n    var extendString = function () {\n        var _add = function (name, body) { return Object.defineProperty(String.prototype, name, _noEnum(body)); };\n        _add('fromBase64', function () { return decode(this); });\n        _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n        _add('toBase64URI', function () { return encode(this, true); });\n        _add('toBase64URL', function () { return encode(this, true); });\n        _add('toUint8Array', function () { return toUint8Array(this); });\n    };\n    /**\n     * extend Uint8Array.prototype with relevant methods\n     */\n    var extendUint8Array = function () {\n        var _add = function (name, body) { return Object.defineProperty(Uint8Array.prototype, name, _noEnum(body)); };\n        _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n        _add('toBase64URI', function () { return fromUint8Array(this, true); });\n        _add('toBase64URL', function () { return fromUint8Array(this, true); });\n    };\n    /**\n     * extend Builtin prototypes with relevant methods\n     */\n    var extendBuiltins = function () {\n        extendString();\n        extendUint8Array();\n    };\n    var gBase64 = {\n        version: version,\n        VERSION: VERSION,\n        atob: _atob,\n        atobPolyfill: atobPolyfill,\n        btoa: _btoa,\n        btoaPolyfill: btoaPolyfill,\n        fromBase64: decode,\n        toBase64: encode,\n        encode: encode,\n        encodeURI: encodeURI,\n        encodeURL: encodeURI,\n        utob: utob,\n        btou: btou,\n        decode: decode,\n        isValid: isValid,\n        fromUint8Array: fromUint8Array,\n        toUint8Array: toUint8Array,\n        extendString: extendString,\n        extendUint8Array: extendUint8Array,\n        extendBuiltins: extendBuiltins\n    };\n    //\n    // export Base64 to the namespace\n    //\n    // ES5 is yet to have Object.assign() that may make transpilers unhappy.\n    // gBase64.Base64 = Object.assign({}, gBase64);\n    gBase64.Base64 = {};\n    Object.keys(gBase64).forEach(function (k) { return gBase64.Base64[k] = gBase64[k]; });\n    return gBase64;\n}));\n","const types = require(\"./types\");\nconst typeTrieData = require(\"./typeTrie.json\").data;\nconst extPictData = require(\"./extPict.json\").data;\n\nconst UnicodeTrie = require(\"unicode-trie\");\nconst Base64 = require(\"js-base64\").Base64;\n\nconst typeTrie = new UnicodeTrie(Base64.toUint8Array(typeTrieData));\nconst extPict = new UnicodeTrie(Base64.toUint8Array(extPictData));\n\nfunction is(type, bit) {\n  return (type & bit) !== 0;\n}\n\nconst GB11State = {\n  Initial: 0,\n  ExtendOrZWJ: 1,\n  NotBoundary: 2,\n};\n\nfunction nextGraphemeClusterSize(ts, start) {\n  const L = ts.length;\n\n  let ri = 0;\n  let gb11State = GB11State.Initial;\n\n  // GB1: sot ÷ Any\n  for (let i = start; i + 1 < L; i++) {\n    const curr = ts[i + 0];\n    const next = ts[i + 1];\n\n    // for GB12, GB13\n    if (!is(curr, types.Regional_Indicator)) {\n      ri = 0;\n    }\n\n    // for GB11: \\p{Extended_Pictographic} Extend* ZWJ x \\p{Extended_Pictographic}\n    switch (gb11State) {\n      case GB11State.NotBoundary:\n      case GB11State.Initial:\n        if (is(curr, types.Extended_Pictographic)) {\n          gb11State = GB11State.ExtendOrZWJ;\n        } else {\n          gb11State = GB11State.Initial;\n        }\n        break;\n      case GB11State.ExtendOrZWJ:\n        if (is(curr, types.Extend)) {\n          gb11State = GB11State.ExtendOrZWJ;\n        } else if (\n          is(curr, types.ZWJ) &&\n          is(next, types.Extended_Pictographic)\n        ) {\n          gb11State = GB11State.NotBoundary;\n        } else {\n          gb11State = GB11State.Initial;\n        }\n        break;\n    }\n\n    // GB3: CR x LF\n    if (is(curr, types.CR) && is(next, types.LF)) {\n      continue;\n    }\n    // GB4: (Control | CR | LF) ÷\n    if (is(curr, types.Control | types.CR | types.LF)) {\n      return i + 1 - start;\n    }\n    // GB5: ÷ (Control | CR | LF)\n    if (is(next, types.Control | types.CR | types.LF)) {\n      return i + 1 - start;\n    }\n    // GB6: L x (L | V | LV | LVT)\n    if (\n      is(curr, types.L) &&\n      is(next, types.L | types.V | types.LV | types.LVT)\n    ) {\n      continue;\n    }\n    // GB7: (LV | V) x (V | T)\n    if (is(curr, types.LV | types.V) && is(next, types.V | types.T)) {\n      continue;\n    }\n    // GB8: (LVT | T) x T\n    if (is(curr, types.LVT | types.T) && is(next, types.T)) {\n      continue;\n    }\n    // GB9: x (Extend | ZWJ)\n    if (is(next, types.Extend | types.ZWJ)) {\n      continue;\n    }\n    // GB9a: x SpacingMark\n    if (is(next, types.SpacingMark)) {\n      continue;\n    }\n    // GB9b: Prepend x\n    if (is(curr, types.Prepend)) {\n      continue;\n    }\n    // GB11: \\p{Extended_Pictographic} Extend* ZWJ x \\p{Extended_Pictographic}\n    if (gb11State === GB11State.NotBoundary) {\n      continue;\n    }\n    // GB12: sot (RI RI)* RI x RI\n    // GB13: [^RI] (RI RI)* RI x RI\n    if (\n      is(curr, types.Regional_Indicator) &&\n      is(next, types.Regional_Indicator) &&\n      ri % 2 === 0\n    ) {\n      ri++;\n      continue;\n    }\n    // GB999: Any ÷ Any\n    return i + 1 - start;\n  }\n  // GB2: Any ÷ eot\n  return L - start;\n}\n\nmodule.exports = function split(str) {\n  const graphemeClusters = [];\n\n  const map = [0];\n  const ts = [];\n  for (let i = 0; i < str.length; ) {\n    const code = str.codePointAt(i);\n    ts.push(typeTrie.get(code) | extPict.get(code));\n    i += code > 65535 ? 2 : 1;\n    map.push(i);\n  }\n\n  for (let offset = 0; offset < ts.length; ) {\n    const size = nextGraphemeClusterSize(ts, offset);\n    const start = map[offset];\n    const end = map[offset + size];\n    graphemeClusters.push(str.slice(start, end));\n    offset += size;\n  }\n\n  return graphemeClusters;\n};\n",null,"'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","(function (root) {\n    'use strict';\n    // A list of regular expressions that match arbitrary IPv4 addresses,\n    // for which a number of weird notations exist.\n    // Note that an address like 0010.0xa5.1.1 is considered legal.\n    const ipv4Part = '(0?\\\\d+|0x[a-f0-9]+)';\n    const ipv4Regexes = {\n        fourOctet: new RegExp(`^${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}$`, 'i'),\n        threeOctet: new RegExp(`^${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}$`, 'i'),\n        twoOctet: new RegExp(`^${ipv4Part}\\\\.${ipv4Part}$`, 'i'),\n        longValue: new RegExp(`^${ipv4Part}$`, 'i')\n    };\n\n    // Regular Expression for checking Octal numbers\n    const octalRegex = new RegExp(`^0[0-7]+$`, 'i');\n    const hexRegex = new RegExp(`^0x[a-f0-9]+$`, 'i');\n\n    const zoneIndex = '%[0-9a-z]{1,}';\n\n    // IPv6-matching regular expressions.\n    // For IPv6, the task is simpler: it is enough to match the colon-delimited\n    // hexadecimal IPv6 and a transitional variant with dotted-decimal IPv4 at\n    // the end.\n    const ipv6Part = '(?:[0-9a-f]+::?)+';\n    const ipv6Regexes = {\n        zoneIndex: new RegExp(zoneIndex, 'i'),\n        'native': new RegExp(`^(::)?(${ipv6Part})?([0-9a-f]+)?(::)?(${zoneIndex})?$`, 'i'),\n        deprecatedTransitional: new RegExp(`^(?:::)(${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}(${zoneIndex})?)$`, 'i'),\n        transitional: new RegExp(`^((?:${ipv6Part})|(?:::)(?:${ipv6Part})?)${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}(${zoneIndex})?$`, 'i')\n    };\n\n    // Expand :: in an IPv6 address or address part consisting of `parts` groups.\n    function expandIPv6 (string, parts) {\n        // More than one '::' means invalid adddress\n        if (string.indexOf('::') !== string.lastIndexOf('::')) {\n            return null;\n        }\n\n        let colonCount = 0;\n        let lastColon = -1;\n        let zoneId = (string.match(ipv6Regexes.zoneIndex) || [])[0];\n        let replacement, replacementCount;\n\n        // Remove zone index and save it for later\n        if (zoneId) {\n            zoneId = zoneId.substring(1);\n            string = string.replace(/%.+$/, '');\n        }\n\n        // How many parts do we already have?\n        while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n            colonCount++;\n        }\n\n        // 0::0 is two parts more than ::\n        if (string.substr(0, 2) === '::') {\n            colonCount--;\n        }\n\n        if (string.substr(-2, 2) === '::') {\n            colonCount--;\n        }\n\n        // The following loop would hang if colonCount > parts\n        if (colonCount > parts) {\n            return null;\n        }\n\n        // replacement = ':' + '0:' * (parts - colonCount)\n        replacementCount = parts - colonCount;\n        replacement = ':';\n        while (replacementCount--) {\n            replacement += '0:';\n        }\n\n        // Insert the missing zeroes\n        string = string.replace('::', replacement);\n\n        // Trim any garbage which may be hanging around if :: was at the edge in\n        // the source strin\n        if (string[0] === ':') {\n            string = string.slice(1);\n        }\n\n        if (string[string.length - 1] === ':') {\n            string = string.slice(0, -1);\n        }\n\n        parts = (function () {\n            const ref = string.split(':');\n            const results = [];\n\n            for (let i = 0; i < ref.length; i++) {\n                results.push(parseInt(ref[i], 16));\n            }\n\n            return results;\n        })();\n\n        return {\n            parts: parts,\n            zoneId: zoneId\n        };\n    }\n\n    // A generic CIDR (Classless Inter-Domain Routing) RFC1518 range matcher.\n    function matchCIDR (first, second, partSize, cidrBits) {\n        if (first.length !== second.length) {\n            throw new Error('ipaddr: cannot match CIDR for objects with different lengths');\n        }\n\n        let part = 0;\n        let shift;\n\n        while (cidrBits > 0) {\n            shift = partSize - cidrBits;\n            if (shift < 0) {\n                shift = 0;\n            }\n\n            if (first[part] >> shift !== second[part] >> shift) {\n                return false;\n            }\n\n            cidrBits -= partSize;\n            part += 1;\n        }\n\n        return true;\n    }\n\n    function parseIntAuto (string) {\n        // Hexadedimal base 16 (0x#)\n        if (hexRegex.test(string)) {\n            return parseInt(string, 16);\n        }\n        // While octal representation is discouraged by ECMAScript 3\n        // and forbidden by ECMAScript 5, we silently allow it to\n        // work only if the rest of the string has numbers less than 8.\n        if (string[0] === '0' && !isNaN(parseInt(string[1], 10))) {\n        if (octalRegex.test(string)) {\n            return parseInt(string, 8);\n        }\n            throw new Error(`ipaddr: cannot parse ${string} as octal`);\n        }\n        // Always include the base 10 radix!\n        return parseInt(string, 10);\n    }\n\n    function padPart (part, length) {\n        while (part.length < length) {\n            part = `0${part}`;\n        }\n\n        return part;\n    }\n\n    const ipaddr = {};\n\n    // An IPv4 address (RFC791).\n    ipaddr.IPv4 = (function () {\n        // Constructs a new IPv4 address from an array of four octets\n        // in network order (MSB first)\n        // Verifies the input.\n        function IPv4 (octets) {\n            if (octets.length !== 4) {\n                throw new Error('ipaddr: ipv4 octet count should be 4');\n            }\n\n            let i, octet;\n\n            for (i = 0; i < octets.length; i++) {\n                octet = octets[i];\n                if (!((0 <= octet && octet <= 255))) {\n                    throw new Error('ipaddr: ipv4 octet should fit in 8 bits');\n                }\n            }\n\n            this.octets = octets;\n        }\n\n        // Special IPv4 address ranges.\n        // See also https://en.wikipedia.org/wiki/Reserved_IP_addresses\n        IPv4.prototype.SpecialRanges = {\n            unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n            broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n            // RFC3171\n            multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n            // RFC3927\n            linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n            // RFC5735\n            loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n            // RFC6598\n            carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\n            // RFC1918\n            'private': [\n                [new IPv4([10, 0, 0, 0]), 8],\n                [new IPv4([172, 16, 0, 0]), 12],\n                [new IPv4([192, 168, 0, 0]), 16]\n            ],\n            // Reserved and testing-only ranges; RFCs 5735, 5737, 2544, 1700\n            reserved: [\n                [new IPv4([192, 0, 0, 0]), 24],\n                [new IPv4([192, 0, 2, 0]), 24],\n                [new IPv4([192, 88, 99, 0]), 24],\n                [new IPv4([198, 18, 0, 0]), 15],\n                [new IPv4([198, 51, 100, 0]), 24],\n                [new IPv4([203, 0, 113, 0]), 24],\n                [new IPv4([240, 0, 0, 0]), 4]\n            ]\n        };\n\n        // The 'kind' method exists on both IPv4 and IPv6 classes.\n        IPv4.prototype.kind = function () {\n            return 'ipv4';\n        };\n\n        // Checks if this address matches other one within given CIDR range.\n        IPv4.prototype.match = function (other, cidrRange) {\n            let ref;\n            if (cidrRange === undefined) {\n                ref = other;\n                other = ref[0];\n                cidrRange = ref[1];\n            }\n\n            if (other.kind() !== 'ipv4') {\n                throw new Error('ipaddr: cannot match ipv4 address with non-ipv4 one');\n            }\n\n            return matchCIDR(this.octets, other.octets, 8, cidrRange);\n        };\n\n        // returns a number of leading ones in IPv4 address, making sure that\n        // the rest is a solid sequence of 0's (valid netmask)\n        // returns either the CIDR length or null if mask is not valid\n        IPv4.prototype.prefixLengthFromSubnetMask = function () {\n            let cidr = 0;\n            // non-zero encountered stop scanning for zeroes\n            let stop = false;\n            // number of zeroes in octet\n            const zerotable = {\n                0: 8,\n                128: 7,\n                192: 6,\n                224: 5,\n                240: 4,\n                248: 3,\n                252: 2,\n                254: 1,\n                255: 0\n            };\n            let i, octet, zeros;\n\n            for (i = 3; i >= 0; i -= 1) {\n                octet = this.octets[i];\n                if (octet in zerotable) {\n                    zeros = zerotable[octet];\n                    if (stop && zeros !== 0) {\n                        return null;\n                    }\n\n                    if (zeros !== 8) {\n                        stop = true;\n                    }\n\n                    cidr += zeros;\n                } else {\n                    return null;\n                }\n            }\n\n            return 32 - cidr;\n        };\n\n        // Checks if the address corresponds to one of the special ranges.\n        IPv4.prototype.range = function () {\n            return ipaddr.subnetMatch(this, this.SpecialRanges);\n        };\n\n        // Returns an array of byte-sized values in network order (MSB first)\n        IPv4.prototype.toByteArray = function () {\n            return this.octets.slice(0);\n        };\n\n        // Converts this IPv4 address to an IPv4-mapped IPv6 address.\n        IPv4.prototype.toIPv4MappedAddress = function () {\n            return ipaddr.IPv6.parse(`::ffff:${this.toString()}`);\n        };\n\n        // Symmetrical method strictly for aligning with the IPv6 methods.\n        IPv4.prototype.toNormalizedString = function () {\n            return this.toString();\n        };\n\n        // Returns the address in convenient, decimal-dotted format.\n        IPv4.prototype.toString = function () {\n            return this.octets.join('.');\n        };\n\n        return IPv4;\n    })();\n\n    // A utility function to return broadcast address given the IPv4 interface and prefix length in CIDR notation\n    ipaddr.IPv4.broadcastAddressFromCIDR = function (string) {\n\n        try {\n            const cidr = this.parseCIDR(string);\n            const ipInterfaceOctets = cidr[0].toByteArray();\n            const subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            const octets = [];\n            let i = 0;\n            while (i < 4) {\n                // Broadcast address is bitwise OR between ip interface and inverted mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n        }\n    };\n\n    // Checks if a given string is formatted like IPv4 address.\n    ipaddr.IPv4.isIPv4 = function (string) {\n        return this.parser(string) !== null;\n    };\n\n    // Checks if a given string is a valid IPv4 address.\n    ipaddr.IPv4.isValid = function (string) {\n        try {\n            new this(this.parser(string));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // Checks if a given string is a full four-part IPv4 Address.\n    ipaddr.IPv4.isValidFourPartDecimal = function (string) {\n        if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    // A utility function to return network address given the IPv4 interface and prefix length in CIDR notation\n    ipaddr.IPv4.networkAddressFromCIDR = function (string) {\n        let cidr, i, ipInterfaceOctets, octets, subnetMaskOctets;\n\n        try {\n            cidr = this.parseCIDR(string);\n            ipInterfaceOctets = cidr[0].toByteArray();\n            subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            octets = [];\n            i = 0;\n            while (i < 4) {\n                // Network address is bitwise AND between ip interface and mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n        }\n    };\n\n    // Tries to parse and validate a string with IPv4 address.\n    // Throws an error if it fails.\n    ipaddr.IPv4.parse = function (string) {\n        const parts = this.parser(string);\n\n        if (parts === null) {\n            throw new Error('ipaddr: string is not formatted like an IPv4 Address');\n        }\n\n        return new this(parts);\n    };\n\n    // Parses the string as an IPv4 Address with CIDR Notation.\n    ipaddr.IPv4.parseCIDR = function (string) {\n        let match;\n\n        if ((match = string.match(/^(.+)\\/(\\d+)$/))) {\n            const maskLength = parseInt(match[2]);\n            if (maskLength >= 0 && maskLength <= 32) {\n                const parsed = [this.parse(match[1]), maskLength];\n                Object.defineProperty(parsed, 'toString', {\n                    value: function () {\n                        return this.join('/');\n                    }\n                });\n                return parsed;\n            }\n        }\n\n        throw new Error('ipaddr: string is not formatted like an IPv4 CIDR range');\n    };\n\n    // Classful variants (like a.b, where a is an octet, and b is a 24-bit\n    // value representing last three octets; this corresponds to a class C\n    // address) are omitted due to classless nature of modern Internet.\n    ipaddr.IPv4.parser = function (string) {\n        let match, part, value;\n\n        // parseInt recognizes all that octal & hexadecimal weirdness for us\n        if ((match = string.match(ipv4Regexes.fourOctet))) {\n            return (function () {\n                const ref = match.slice(1, 6);\n                const results = [];\n\n                for (let i = 0; i < ref.length; i++) {\n                    part = ref[i];\n                    results.push(parseIntAuto(part));\n                }\n\n                return results;\n            })();\n        } else if ((match = string.match(ipv4Regexes.longValue))) {\n            value = parseIntAuto(match[1]);\n            if (value > 0xffffffff || value < 0) {\n                throw new Error('ipaddr: address outside defined range');\n            }\n\n            return ((function () {\n                const results = [];\n                let shift;\n\n                for (shift = 0; shift <= 24; shift += 8) {\n                    results.push((value >> shift) & 0xff);\n                }\n\n                return results;\n            })()).reverse();\n        } else if ((match = string.match(ipv4Regexes.twoOctet))) {\n            return (function () {\n                const ref = match.slice(1, 4);\n                const results = [];\n\n                value = parseIntAuto(ref[1]);\n                if (value > 0xffffff || value < 0) {\n                    throw new Error('ipaddr: address outside defined range');\n                }\n\n                results.push(parseIntAuto(ref[0]));\n                results.push((value >> 16) & 0xff);\n                results.push((value >>  8) & 0xff);\n                results.push( value        & 0xff);\n\n                return results;\n            })();\n        } else if ((match = string.match(ipv4Regexes.threeOctet))) {\n            return (function () {\n                const ref = match.slice(1, 5);\n                const results = [];\n\n                value = parseIntAuto(ref[2]);\n                if (value > 0xffff || value < 0) {\n                    throw new Error('ipaddr: address outside defined range');\n                }\n\n                results.push(parseIntAuto(ref[0]));\n                results.push(parseIntAuto(ref[1]));\n                results.push((value >> 8) & 0xff);\n                results.push( value       & 0xff);\n\n                return results;\n            })();\n        } else {\n            return null;\n        }\n    };\n\n    // A utility function to return subnet mask in IPv4 format given the prefix length\n    ipaddr.IPv4.subnetMaskFromPrefixLength = function (prefix) {\n        prefix = parseInt(prefix);\n        if (prefix < 0 || prefix > 32) {\n            throw new Error('ipaddr: invalid IPv4 prefix length');\n        }\n\n        const octets = [0, 0, 0, 0];\n        let j = 0;\n        const filledOctetCount = Math.floor(prefix / 8);\n\n        while (j < filledOctetCount) {\n            octets[j] = 255;\n            j++;\n        }\n\n        if (filledOctetCount < 4) {\n            octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n        }\n\n        return new this(octets);\n    };\n\n    // An IPv6 address (RFC2460)\n    ipaddr.IPv6 = (function () {\n        // Constructs an IPv6 address from an array of eight 16 - bit parts\n        // or sixteen 8 - bit parts in network order(MSB first).\n        // Throws an error if the input is invalid.\n        function IPv6 (parts, zoneId) {\n            let i, part;\n\n            if (parts.length === 16) {\n                this.parts = [];\n                for (i = 0; i <= 14; i += 2) {\n                    this.parts.push((parts[i] << 8) | parts[i + 1]);\n                }\n            } else if (parts.length === 8) {\n                this.parts = parts;\n            } else {\n                throw new Error('ipaddr: ipv6 part count should be 8 or 16');\n            }\n\n            for (i = 0; i < this.parts.length; i++) {\n                part = this.parts[i];\n                if (!((0 <= part && part <= 0xffff))) {\n                    throw new Error('ipaddr: ipv6 part should fit in 16 bits');\n                }\n            }\n\n            if (zoneId) {\n                this.zoneId = zoneId;\n            }\n        }\n\n        // Special IPv6 ranges\n        IPv6.prototype.SpecialRanges = {\n            // RFC4291, here and after\n            unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n            linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n            multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n            loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n            uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n            ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n            // RFC6145\n            rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n            // RFC6052\n            rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n            // RFC3056\n            '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n            // RFC6052, RFC6146\n            teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n            // RFC4291\n            reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]],\n            benchmarking: [new IPv6([0x2001, 0x2, 0, 0, 0, 0, 0, 0]), 48],\n            amt: [new IPv6([0x2001, 0x3, 0, 0, 0, 0, 0, 0]), 32],\n            as112v6: [new IPv6([0x2001, 0x4, 0x112, 0, 0, 0, 0, 0]), 48],\n            deprecated: [new IPv6([0x2001, 0x10, 0, 0, 0, 0, 0, 0]), 28],\n            orchid2: [new IPv6([0x2001, 0x20, 0, 0, 0, 0, 0, 0]), 28]\n        };\n\n        // Checks if this address is an IPv4-mapped IPv6 address.\n        IPv6.prototype.isIPv4MappedAddress = function () {\n            return this.range() === 'ipv4Mapped';\n        };\n\n        // The 'kind' method exists on both IPv4 and IPv6 classes.\n        IPv6.prototype.kind = function () {\n            return 'ipv6';\n        };\n\n        // Checks if this address matches other one within given CIDR range.\n        IPv6.prototype.match = function (other, cidrRange) {\n            let ref;\n\n            if (cidrRange === undefined) {\n                ref = other;\n                other = ref[0];\n                cidrRange = ref[1];\n            }\n\n            if (other.kind() !== 'ipv6') {\n                throw new Error('ipaddr: cannot match ipv6 address with non-ipv6 one');\n            }\n\n            return matchCIDR(this.parts, other.parts, 16, cidrRange);\n        };\n\n        // returns a number of leading ones in IPv6 address, making sure that\n        // the rest is a solid sequence of 0's (valid netmask)\n        // returns either the CIDR length or null if mask is not valid\n        IPv6.prototype.prefixLengthFromSubnetMask = function () {\n            let cidr = 0;\n            // non-zero encountered stop scanning for zeroes\n            let stop = false;\n            // number of zeroes in octet\n            const zerotable = {\n                0: 16,\n                32768: 15,\n                49152: 14,\n                57344: 13,\n                61440: 12,\n                63488: 11,\n                64512: 10,\n                65024: 9,\n                65280: 8,\n                65408: 7,\n                65472: 6,\n                65504: 5,\n                65520: 4,\n                65528: 3,\n                65532: 2,\n                65534: 1,\n                65535: 0\n            };\n            let part, zeros;\n\n            for (let i = 7; i >= 0; i -= 1) {\n                part = this.parts[i];\n                if (part in zerotable) {\n                    zeros = zerotable[part];\n                    if (stop && zeros !== 0) {\n                        return null;\n                    }\n\n                    if (zeros !== 16) {\n                        stop = true;\n                    }\n\n                    cidr += zeros;\n                } else {\n                    return null;\n                }\n            }\n\n            return 128 - cidr;\n        };\n\n\n        // Checks if the address corresponds to one of the special ranges.\n        IPv6.prototype.range = function () {\n            return ipaddr.subnetMatch(this, this.SpecialRanges);\n        };\n\n        // Returns an array of byte-sized values in network order (MSB first)\n        IPv6.prototype.toByteArray = function () {\n            let part;\n            const bytes = [];\n            const ref = this.parts;\n            for (let i = 0; i < ref.length; i++) {\n                part = ref[i];\n                bytes.push(part >> 8);\n                bytes.push(part & 0xff);\n            }\n\n            return bytes;\n        };\n\n        // Returns the address in expanded format with all zeroes included, like\n        // 2001:0db8:0008:0066:0000:0000:0000:0001\n        IPv6.prototype.toFixedLengthString = function () {\n            const addr = ((function () {\n                const results = [];\n                for (let i = 0; i < this.parts.length; i++) {\n                    results.push(padPart(this.parts[i].toString(16), 4));\n                }\n\n                return results;\n            }).call(this)).join(':');\n\n            let suffix = '';\n\n            if (this.zoneId) {\n                suffix = `%${this.zoneId}`;\n            }\n\n            return addr + suffix;\n        };\n\n        // Converts this address to IPv4 address if it is an IPv4-mapped IPv6 address.\n        // Throws an error otherwise.\n        IPv6.prototype.toIPv4Address = function () {\n            if (!this.isIPv4MappedAddress()) {\n                throw new Error('ipaddr: trying to convert a generic ipv6 address to ipv4');\n            }\n\n            const ref = this.parts.slice(-2);\n            const high = ref[0];\n            const low = ref[1];\n\n            return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n        };\n\n        // Returns the address in expanded format with all zeroes included, like\n        // 2001:db8:8:66:0:0:0:1\n        //\n        // Deprecated: use toFixedLengthString() instead.\n        IPv6.prototype.toNormalizedString = function () {\n            const addr = ((function () {\n                const results = [];\n\n                for (let i = 0; i < this.parts.length; i++) {\n                    results.push(this.parts[i].toString(16));\n                }\n\n                return results;\n            }).call(this)).join(':');\n\n            let suffix = '';\n\n            if (this.zoneId) {\n                suffix = `%${this.zoneId}`;\n            }\n\n            return addr + suffix;\n        };\n\n        // Returns the address in compact, human-readable format like\n        // 2001:db8:8:66::1\n        // in line with RFC 5952 (see https://tools.ietf.org/html/rfc5952#section-4)\n        IPv6.prototype.toRFC5952String = function () {\n            const regex = /((^|:)(0(:|$)){2,})/g;\n            const string = this.toNormalizedString();\n            let bestMatchIndex = 0;\n            let bestMatchLength = -1;\n            let match;\n\n            while ((match = regex.exec(string))) {\n                if (match[0].length > bestMatchLength) {\n                    bestMatchIndex = match.index;\n                    bestMatchLength = match[0].length;\n                }\n            }\n\n            if (bestMatchLength < 0) {\n                return string;\n            }\n\n            return `${string.substring(0, bestMatchIndex)}::${string.substring(bestMatchIndex + bestMatchLength)}`;\n        };\n\n        // Returns the address in compact, human-readable format like\n        // 2001:db8:8:66::1\n        // Calls toRFC5952String under the hood.\n        IPv6.prototype.toString = function () {\n            return this.toRFC5952String();\n        };\n\n        return IPv6;\n\n    })();\n\n    // A utility function to return broadcast address given the IPv6 interface and prefix length in CIDR notation\n    ipaddr.IPv6.broadcastAddressFromCIDR = function (string) {\n        try {\n            const cidr = this.parseCIDR(string);\n            const ipInterfaceOctets = cidr[0].toByteArray();\n            const subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            const octets = [];\n            let i = 0;\n            while (i < 16) {\n                // Broadcast address is bitwise OR between ip interface and inverted mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error(`ipaddr: the address does not have IPv6 CIDR format (${e})`);\n        }\n    };\n\n    // Checks if a given string is formatted like IPv6 address.\n    ipaddr.IPv6.isIPv6 = function (string) {\n        return this.parser(string) !== null;\n    };\n\n    // Checks to see if string is a valid IPv6 Address\n    ipaddr.IPv6.isValid = function (string) {\n\n        // Since IPv6.isValid is always called first, this shortcut\n        // provides a substantial performance gain.\n        if (typeof string === 'string' && string.indexOf(':') === -1) {\n            return false;\n        }\n\n        try {\n            const addr = this.parser(string);\n            new this(addr.parts, addr.zoneId);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // A utility function to return network address given the IPv6 interface and prefix length in CIDR notation\n    ipaddr.IPv6.networkAddressFromCIDR = function (string) {\n        let cidr, i, ipInterfaceOctets, octets, subnetMaskOctets;\n\n        try {\n            cidr = this.parseCIDR(string);\n            ipInterfaceOctets = cidr[0].toByteArray();\n            subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            octets = [];\n            i = 0;\n            while (i < 16) {\n                // Network address is bitwise AND between ip interface and mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error(`ipaddr: the address does not have IPv6 CIDR format (${e})`);\n        }\n    };\n\n    // Tries to parse and validate a string with IPv6 address.\n    // Throws an error if it fails.\n    ipaddr.IPv6.parse = function (string) {\n        const addr = this.parser(string);\n\n        if (addr.parts === null) {\n            throw new Error('ipaddr: string is not formatted like an IPv6 Address');\n        }\n\n        return new this(addr.parts, addr.zoneId);\n    };\n\n    ipaddr.IPv6.parseCIDR = function (string) {\n        let maskLength, match, parsed;\n\n        if ((match = string.match(/^(.+)\\/(\\d+)$/))) {\n            maskLength = parseInt(match[2]);\n            if (maskLength >= 0 && maskLength <= 128) {\n                parsed = [this.parse(match[1]), maskLength];\n                Object.defineProperty(parsed, 'toString', {\n                    value: function () {\n                        return this.join('/');\n                    }\n                });\n                return parsed;\n            }\n        }\n\n        throw new Error('ipaddr: string is not formatted like an IPv6 CIDR range');\n    };\n\n    // Parse an IPv6 address.\n    ipaddr.IPv6.parser = function (string) {\n        let addr, i, match, octet, octets, zoneId;\n\n        if ((match = string.match(ipv6Regexes.deprecatedTransitional))) {\n            return this.parser(`::ffff:${match[1]}`);\n        }\n        if (ipv6Regexes.native.test(string)) {\n            return expandIPv6(string, 8);\n        }\n        if ((match = string.match(ipv6Regexes.transitional))) {\n            zoneId = match[6] || '';\n            addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\n            if (addr.parts) {\n                octets = [\n                    parseInt(match[2]),\n                    parseInt(match[3]),\n                    parseInt(match[4]),\n                    parseInt(match[5])\n                ];\n                for (i = 0; i < octets.length; i++) {\n                    octet = octets[i];\n                    if (!((0 <= octet && octet <= 255))) {\n                        return null;\n                    }\n                }\n\n                addr.parts.push(octets[0] << 8 | octets[1]);\n                addr.parts.push(octets[2] << 8 | octets[3]);\n                return {\n                    parts: addr.parts,\n                    zoneId: addr.zoneId\n                };\n            }\n        }\n\n        return null;\n    };\n\n    // A utility function to return subnet mask in IPv6 format given the prefix length\n    ipaddr.IPv6.subnetMaskFromPrefixLength = function (prefix) {\n        prefix = parseInt(prefix);\n        if (prefix < 0 || prefix > 128) {\n            throw new Error('ipaddr: invalid IPv6 prefix length');\n        }\n\n        const octets = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        let j = 0;\n        const filledOctetCount = Math.floor(prefix / 8);\n\n        while (j < filledOctetCount) {\n            octets[j] = 255;\n            j++;\n        }\n\n        if (filledOctetCount < 16) {\n            octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n        }\n\n        return new this(octets);\n    };\n\n    // Try to parse an array in network order (MSB first) for IPv4 and IPv6\n    ipaddr.fromByteArray = function (bytes) {\n        const length = bytes.length;\n\n        if (length === 4) {\n            return new ipaddr.IPv4(bytes);\n        } else if (length === 16) {\n            return new ipaddr.IPv6(bytes);\n        } else {\n            throw new Error('ipaddr: the binary input is neither an IPv6 nor IPv4 address');\n        }\n    };\n\n    // Checks if the address is valid IP address\n    ipaddr.isValid = function (string) {\n        return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n    };\n\n\n    // Attempts to parse an IP Address, first through IPv6 then IPv4.\n    // Throws an error if it could not be parsed.\n    ipaddr.parse = function (string) {\n        if (ipaddr.IPv6.isValid(string)) {\n            return ipaddr.IPv6.parse(string);\n        } else if (ipaddr.IPv4.isValid(string)) {\n            return ipaddr.IPv4.parse(string);\n        } else {\n            throw new Error('ipaddr: the address has neither IPv6 nor IPv4 format');\n        }\n    };\n\n    // Attempt to parse CIDR notation, first through IPv6 then IPv4.\n    // Throws an error if it could not be parsed.\n    ipaddr.parseCIDR = function (string) {\n        try {\n            return ipaddr.IPv6.parseCIDR(string);\n        } catch (e) {\n            try {\n                return ipaddr.IPv4.parseCIDR(string);\n            } catch (e2) {\n                throw new Error('ipaddr: the address has neither IPv6 nor IPv4 CIDR format');\n            }\n        }\n    };\n\n    // Parse an address and return plain IPv4 address if it is an IPv4-mapped address\n    ipaddr.process = function (string) {\n        const addr = this.parse(string);\n\n        if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n            return addr.toIPv4Address();\n        } else {\n            return addr;\n        }\n    };\n\n    // An utility function to ease named range matching. See examples below.\n    // rangeList can contain both IPv4 and IPv6 subnet entries and will not throw errors\n    // on matching IPv4 addresses to IPv6 ranges or vice versa.\n    ipaddr.subnetMatch = function (address, rangeList, defaultName) {\n        let i, rangeName, rangeSubnets, subnet;\n\n        if (defaultName === undefined || defaultName === null) {\n            defaultName = 'unicast';\n        }\n\n        for (rangeName in rangeList) {\n            if (Object.prototype.hasOwnProperty.call(rangeList, rangeName)) {\n                rangeSubnets = rangeList[rangeName];\n                // ECMA5 Array.isArray isn't available everywhere\n                if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n                    rangeSubnets = [rangeSubnets];\n                }\n\n                for (i = 0; i < rangeSubnets.length; i++) {\n                    subnet = rangeSubnets[i];\n                    if (address.kind() === subnet[0].kind() && address.match.apply(address, subnet)) {\n                        return rangeName;\n                    }\n                }\n            }\n        }\n\n        return defaultName;\n    };\n\n    // Export for both the CommonJS and browser-like environment\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = ipaddr;\n\n    } else {\n        root.ipaddr = ipaddr;\n    }\n\n}(this));\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!isBytes(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!isBytes(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        if (!isBytes(a))\n            throw new Error('Uint8Array expected');\n        sum += a.length;\n    }\n    let res = new Uint8Array(sum);\n    let pad = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n, pos, value) => {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\nimport { createHasher, expand_message_xmd } from './abstract/hash-to-curve.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = Field(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexport const ed25519 = /* @__PURE__ */ twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n});\nexport const ed25519ph = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512,\n});\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities\n/**\n * @__NO_SIDE_EFFECTS__\n */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain(...args) {\n    const id = (a) => a;\n    // Wrap call in closure so JIT can inline calls\n    const wrap = (a, b) => (c) => a(b(c));\n    // Construct chain of args[-1].encode(args[-2].encode([...]))\n    const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n    // Construct chain of args[0].decode(args[1].decode(...))\n    const decode = args.map((x) => x.decode).reduce(wrap, id);\n    return { encode, decode };\n}\n/**\n * Encodes integer radix representation to array of strings using alphabet and back\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\n/**\n * Slow: O(n^2) time complexity\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix(data, from, to) {\n    // base 1 is impossible\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            const rounded = Math.floor(digitBase / to);\n            digits[i] = rounded;\n            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!rounded)\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = /* @__NO_SIDE_EFFECTS__ */ (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = /*@__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));\n/**\n * Implemented with numbers, because BigInt is 5x slower\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0; // bitwise position in current element\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1; // clean carry, otherwise it will cause overflow\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\n// prettier-ignore\nexport const utils = {\n    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n// RFC 4648 aka RFC 3548\n// ---------------------\nexport const base16 = /* @__PURE__ */ chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = /* @__PURE__ */ chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = /* @__PURE__ */ chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = /* @__PURE__ */ chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nexport const base64urlnopad = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));\n// base58 code\n// -----------\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = /* @__PURE__ */ genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = /* @__PURE__ */ genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = /* @__PURE__ */ genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\n// xmr ver is done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n// Block encoding significantly reduces quadratic complexity of base58.\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const createBase58check = /* @__PURE__ */ (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\n// legacy export, bad name\nexport const base58check = createBase58check;\nconst BECH_ALPHABET = /* @__PURE__ */ chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        const lowered = prefix.toLowerCase();\n        const sum = bechChecksum(lowered, words, ENCODING_CONST);\n        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = /* @__PURE__ */ genBech32('bech32');\nexport const bech32m = /* @__PURE__ */ genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = /* @__PURE__ */ chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\n// prettier-ignore\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!isBytes(bytes))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString; // as in python, but for bytes only\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n",null,null,null,null,null,null,null,null,null,null],"names":["base64Js","b64","lens","getLens","validLen","placeHoldersLen","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","ieee754","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","require$$1","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","toByteArray","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","TOKEN_PROGRAM_ID","PublicKey","ASSOCIATED_TOKEN_PROGRAM_ID","Layout_1","constant","utf8","cstr","blob","unionLayoutDiscriminator","union","seq","bits","struct","f64be","f64","f32be","f32","ns64be","s48be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","checkUint8Array","uint8ArrayToBuffer","Layout","span","property","replicate","rv","create","assign","fromArray","values","nameWithProperty","bindConstructorLayout","Class","layout","hasOwnProperty","layout_","boundConstructor_","makeDestinationObject","encode","decode","isCount","GreedyCount","ExternalLayout","elementSpan","rem","OffsetLayout","UInt","UIntBE","IntBE","V2E32","divmodInt64","hi32","lo32","NearUInt64","roundedInt64","NearUInt64BE","NearInt64","NearInt64BE","Float","FloatBE","Double","DoubleBE","Sequence","elementLayout","count","idx","getSpan","elo","reduce","v","Structure","fields","decodePrefixes","acc","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionLayoutDiscriminator","UnionDiscriminator","discr","defaultLayout","discriminator","configGetSourceVariant","gsv","boundGetSourceVariant","bind","vlo","getVariant","defaultGetSourceVariant","registry","tag","dlo","clo","usesPrefixDiscriminator","contentOffset","getSourceVariant","addVariant","variant","VariantLayout","vb","Union","fixBitwiseResult","BitStructure","word","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","Boolean","fieldFor","container","usedBits","sum","totalBits","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","encodeDecode","browser","toBigIntLE_1","toBigIntLE","reversed","reverse","hex","toBigIntBE","toBufferLE_1","toBufferLE","width","padStart","toBufferBE","u64","bigIntLayout","bigInt","bool","u8","boolLayout","publicKey","publicKeyLayout","toBuffer","TokenError","TokenAccountNotFoundError","TokenInvalidAccountOwnerError","TokenInvalidAccountSizeError","TokenInvalidMintError","TokenOwnerOffCurveError","AccountType","ACCOUNT_TYPE_SIZE","MULTISIG_SIZE","AccountState","AccountLayout","u32","ACCOUNT_SIZE","MintLayout","MINT_SIZE","async","getMint","connection","address","commitment","programId","info","owner","rawMint","tlvData","Mint","mintAuthority","mintAuthorityOption","supply","decimals","isInitialized","freezeAuthority","freezeAuthorityOption","unpackMint","getAccountInfo","getAssociatedTokenAddressSync","mint","allowOwnerOffCurve","associatedTokenProgramId","isOnCurve","findProgramAddressSync","createAssociatedTokenAccountIdempotentInstruction","payer","associatedToken","instructionData","keys","pubkey","isSigner","isWritable","SystemProgram","TransactionInstruction","buildAssociatedTokenAccountInstruction","ErrorType","SNSError","captureStackTrace","Numberu32","fromBuffer","InvalidBufferLength","toNumber","Numberu64","U64Overflow","extendStatics","integers","EncodeBuffer","buffer_size","view","DataView","resize_if_necessary","needed_space","new_buffer","get_used_buffer","store_value","bSize","substring","toCall","store_bytes","DecodeBuffer","assert_enough_buffer","consume_value","consume_bytes","__extends","__proto__","p","__","expect_type","fieldPath","expect_same_size","expected","VALID_STRING_TYPES","VALID_OBJECT_KEYS","ErrorSchema","_super","schema","JSON","stringify","validate_schema","key","_i","schema_1","sch","validate_enum_schema","validate_array_schema","validate_map_schema","validate_struct_schema","BorshSerializer","checkTypes","encoded","encode_value","encode_integer","encode_string","encode_boolean","encode_option","encode_enum","encode_array","encode_set","encode_map","encode_struct","utils","encode_bigint","buffer_len","_value","option","valueKey","valueSchema","encode_arraylike","encode_buffer","Set","values_1","value_1","isMap","Map","keys_1","map","_a","pop","BorshDeserializer","bufferArray","decode_value","decode_integer","decode_string","decode_boolean","decode_option","decode_enum","decode_array","decode_set","decode_map","decode_struct","decode_bigint","startsWith","signed","reduceRight","r","asIntN","valueIndex","result","add","serialize","validate","deserialize","createInstruction","nameProgramId","systemProgramId","nameKey","nameOwnerKey","payerKey","hashed_name","lamports","space","nameClassKey","nameParent","nameParentOwner","buffers","Int8Array","updateInstruction","nameAccountKey","input_data","nameUpdateSigner","transferInstruction","newOwnerKey","currentNameOwnerKey","parentOwner","default","deleteInstruction","refundTargetKey","createV2Instruction","getInstruction","rentSysvarAccount","rootDomain","nameAccount","reverseLookupAccount","centralState","buyer","buyerTokenAccount","usdcVault","state","createReverseInstruction","namingServiceProgram","reverseLookup","systemProgram","feePayer","rentSysvar","parentName","parentNameOwner","createInstructionV3","referrerIdxOpt","buyerTokenSource","pythMappingAcc","pythProductAcc","pythPriceAcc","vault","splTokenProgram","referrerAccountOpt","createWithNftInstruction","nftSource","nftMetadata","nftMint","masterEdition","collection","mplTokenMetadata","burnInstruction","nameServiceId","domain","resellingState","NAME_TOKENIZER_ID","MINT_PREFIX","getDomainMint","Tag","NftRecord","nonce","retrieve","accountInfo","findKey","findProgramAddress","retrieveNftOwner","filters","memcmp","toBase58","dataSize","getProgramAccounts","account","getFilter","closure","record","getRecordFromMint","retrieveRecords","promises","Promise","all","filter","NameRegistryState","class","HEADER_LEN","AccountDoesNotExist","nftOwner","_retrieveBatch","nameAccountKeys","nameAccounts","getMultipleAccountsInfo","retrieveBatch","splice","lengths","isBytes","exists","instance","checkFinished","destroyed","finished","crypto","globalThis","createView","rotr","Uint32Array","TextEncoder","toBytes","Hash","clone","_cloneInto","wrapConstructor","hashCons","hashC","update","digest","outputLen","blockLen","SHA2","padOffset","take","process","dataView","roundClean","digestInto","setBigUint64","_32n","_u32_max","wh","wl","h","l","setUint32","oview","outLen","destroy","to","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","F","G","H","getUint32","W15","W2","s0","s1","T1","T2","sha256","NAME_PROGRAM_ID","HASH_PREFIX","ROOT_DOMAIN_ACCOUNT","REGISTER_PROGRAM_ID","PYTH_FIDA_PRICE_ACC","BONFIDA_FIDA_BNB","REVERSE_LOOKUP_CLASS","TWITTER_VERIFICATION_AUTHORITY","TWITTER_ROOT_PARENT_REGISTRY_KEY","BONFIDA_USDC_BNB","USDC_MINT","REFERRERS","TOKENS_SYM_MINT","PYTH_FEEDS","price","product","PYTH_MAPPING_ACC","VAULT_OWNER","CUSTOM_BG_TLD","WOLVES_COLLECTION_METADATA","METAPLEX_ID","getNameOwner","getHashedName","hashed","getNameAccountKey","nameClass","seeds","_derive","parent","getDomainKey","endsWith","splitted","parentKey","isSub","subKey","recordPrefix","isSubRecord","InvalidInput","Record","RECORD_V1_SIZE","SOL","ETH","BSC","Injective","AAAA","Background","RecordVersion","TINF_OK","TINF_DATA_ERROR","Tree","Uint16Array","trans","Data","source","sourceIndex","bitcount","destLen","ltree","dtree","sltree","sdtree","length_bits","length_base","dist_bits","dist_base","clcidx","code_tree","tinf_build_bits_base","base","delta","offs","tinf_build_tree","t","off","tinf_getbit","bit","tinf_read_bits","tinf_decode_symbol","cur","tinf_decode_trees","lt","dt","hlit","hdist","hclen","clen","prev","tinf_inflate_block_data","dist","tinf_inflate_uncompressed_block","tinf_build_fixed_trees","tinyInflate","bfinal","isBigEndian","swap_1","swap32LE","inflate","unicodeTrie","uncompressedLength","highStart","errorValue","index","DATA_BLOCK_LENGTH","INDEX_1_OFFSET","INDEX_2_BLOCK_LENGTH","self","window","version","VERSION","_hasatob","atob","_hasbtoa","btoa","_hasBuffer","_TD","TextDecoder","_TE","b64ch","b64chs","b64tab","tab","forEach","b64re","_fromCC","_U8Afrom","it","_mkUriSafe","m0","_tidyB64","btoaPolyfill","bin","c0","c1","c2","asc","pad","_btoa","_fromUint8Array","u8a","maxargs","strs","fromUint8Array","urlsafe","cb_utob","cc","re_utob","utob","u","_encode","encodeURI","re_btou","cb_btou","cccc","btou","atobPolyfill","test","u24","r1","r2","charAt","_atob","_toUint8Array","toUint8Array","_unURI","_decode","isValid","_noEnum","extendString","_add","body","extendUint8Array","extendBuiltins","gBase64","fromBase64","toBase64","encodeURL","k","Base64","factory","types","Other","CR","LF","Control","Extend","ZWJ","Regional_Indicator","Prepend","SpacingMark","L","V","T","LV","LVT","Extended_Pictographic","typeTrieData","extPictData","require$$2","UnicodeTrie","require$$3","typeTrie","extPict","is","GB11State","nextGraphemeClusterSize","ts","ri","gb11State","curr","next","graphemesplit","graphemeClusters","codePointAt","getHashedNameSync","getNameAccountKeySync","hashedReverseLookup","NoAccountData","deserializeReverse","reverseLookupBatch","reverseLookupAccounts","_deriveSync","classKey","getDomainKeySync","recordClass","V2","CENTRAL_STATE_SNS_RECORDS","getAllDomains","wallet","getReverseKeySync","getReverseKeyFromDomainKey","domainKey","check","errorType","nameLength","ALPHABET","BASE_MAP","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","bs58","root","ipv4Part","ipv4Regexes","fourOctet","RegExp","threeOctet","twoOctet","longValue","octalRegex","hexRegex","zoneIndex","ipv6Part","ipv6Regexes","native","deprecatedTransitional","transitional","expandIPv6","replacement","replacementCount","colonCount","lastColon","zoneId","match","ref","results","matchCIDR","second","partSize","cidrBits","part","parseIntAuto","padPart","ipaddr","IPv4","octets","octet","SpecialRanges","unspecified","broadcast","multicast","linkLocal","loopback","carrierGradeNat","private","reserved","kind","other","cidrRange","prefixLengthFromSubnetMask","cidr","stop","zerotable","zeros","subnetMatch","toIPv4MappedAddress","IPv6","parse","toNormalizedString","broadcastAddressFromCIDR","parseCIDR","ipInterfaceOctets","subnetMaskOctets","subnetMaskFromPrefixLength","isIPv4","parser","isValidFourPartDecimal","networkAddressFromCIDR","maskLength","prefix","filledOctetCount","uniqueLocal","ipv4Mapped","rfc6145","rfc6052","teredo","benchmarking","amt","as112v6","deprecated","orchid2","isIPv4MappedAddress","toFixedLengthString","addr","suffix","toIPv4Address","high","low","toRFC5952String","regex","bestMatchIndex","bestMatchLength","exec","isIPv6","e2","rangeList","defaultName","rangeName","rangeSubnets","subnet","module","maxInt","overflow","stringFromCharCode","digitToBasic","digit","flag","adapt","numPoints","firstTime","baseMinusTMin","counter","extra","ucs2decode","inputLength","bias","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","baseMinusT","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","u64$1","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","_1n","_2n","hexes","_","bytesToHex","hexToNumber","asciis","_0","_9","_A","_F","_f","asciiToBase16","char","hexToBytes","hl","al","ai","n1","n2","bytesToNumberLE","numberToBytesBE","numberToBytesLE","ensureBytes","title","expectedLength","concatBytes","arrays","bitMask","validatorFns","bigint","function","boolean","stringOrUint8Array","isSafeInteger","field","object","Fp","hash","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","entries","_0n","_3n","_4n","_5n","_8n","mod","power","modulo","pow2","invert","number","FpSqrt","P","p1div4","eql","sqr","nv","ONE","legendreC","Q","S","Z","Q1div2","neg","g","ZERO","t2","ge","tonelliShanks","FIELD_FIELDS","nLength","nBitLength","_nBitLength","nByteLength","ceil","validateBasic","curve","ORDER","MASK","BYTES","BITS","Gx","Gy","freeze","VERIFY_DEFAULT","zip215","twistedEdwards","curveDef","CURVE","opts","ut","randomBytes","adjustScalarBytes","uvRatio","mapToCurve","validateOpts","CURVE_ORDER","prehash","cHash","cofactor","modP","sqrt","inv","ctx","phflag","inBig","inRange","in0MaskRange","assertInRange","assertGE0","pointPrecomputes","isPoint","Point","ex","ey","ez","et","toAffine","fromAffine","normalizeZ","points","toInv","invertBatch","_setWindowSize","windowSize","_WINDOW_SIZE","delete","assertValidity","is0","X","Y","X2","Y2","Z2","Z4","aX2","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","negate","double","x1y1","X3","Y3","T3","Z3","subtract","wNAF","wnaf","wNAFCached","multiply","scalar","f","multiplyUnsafe","I","unsafeLadder","isSmallOrder","isTorsionFree","iz","z","ax","ay","zz","clearCofactor","fromHex","normed","lastByte","y2","isXOdd","isLastByteOdd","fromPrivateKey","privKey","getExtendedPublicKey","point","toRawBytes","toHex","constTimeNegate","condition","item","W","windows","elm","precomputeWindow","precomputes","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","precomputesMap","transform","comp","modN","modN_LE","head","pointBytes","hashDomainToScalar","context","msgs","verifyOpts","getPublicKey","sign","options","R","verify","sig","SB","ExtendedPoint","randomPrivateKey","precompute","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","bitLen","redef","sqrtP","isOdd","lhs","rhs","FpPow","div","sqrN","addN","subN","mulN","nums","lastMultiplied","inverted","FpInvertBatch","cmov","fromBytes","bytesToNumberBE","Field","ed25519Defaults","bytesLength","getRandomValues","v3","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","ed25519_pow_2_252_3","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519","ELL2_C1","assertNumber","chain","args","id","wrap","digits","letter","separator","padding","chr","normalize","FpSqrtEven","gcd","radix2carry","convertRadix2","radix2","revPadding","unsafeWrapper","toUpperCase","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","words","encodingConst","genBech32","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","lowered","sepIndex","actualLength","decodeToBytes","bech32","checkSolRecord","signedRecord","getRecordKeySync","V1","getRecord","NoRecordData","deserializeRecord","recordSize","getSolRecord","recordKey","findIndex","byte","trimNullPaddingIdx","encoder","expectedBuffer","bs58Encode","decoded","isValidIp","InvalidRecordData","ipFromByteArray","serializeRecord","CNAME","TXT","encodePunycode","UnsupportedRecord","InvalidEvmAddress","InvalidInjectiveAddress","parseIp","InvalidARecord","InvalidAAAARecord","InvalidRecordInput","serializeSolRecord","content","signer","signature","encodedMessage","valid","InvalidSignature","GUARDIANS","Url","ETH_ROA_RECORDS","UTF8_ENCODED","IPFS","ARWV","LTC","DOGE","Email","Discord","Github","Reddit","Twitter","Telegram","Pic","SHDW","POINT","Backpack","BTC","SELF_SIGNED","deserializeRecordV2Content","has","basic","oldi","w","fromCodePoint","decodePunnycode","serializeRecordV2Content","getRecordV2Key","createNameRegistry","nameOwner","balance","getMinimumBalanceForRentExemption","parentAccount","deleteNameRegistry","createReverseName","SYSVAR_RENT_PUBKEY","createRecordInstruction","createSolRecordInstruction","ReverseTwitterRegistryState","twitterRegistryKey","twitterHandle","reverseTwitterAccountKey","reverseTwitterAccount","InvalidReverseTwitter","createReverseTwitterRegistry","verifiedPubkey","hashedVerifiedPubkey","reverseRegistryKey","reverseTwitterRegistryStateBuff","resolve","solV2Owner","resolveSolRecordV2","resolveSolRecordV1","err","solRecord","recordV2Key","solV2Record","SnsRecord","stalenessId","getStalenessId","roaId","getRoAId","getContent","header","stalenessValidation","Validation","Solana","rightOfAssociationValidation","NAME_OFFERS_ID","FavouriteDomain","FavouriteDomainNotFound","getKey","getKeySync","CustomBg","DEGEN_POET_KEY","RBG_0x00_KEY","constants","devnet","bindings","updateNameRegistryData","transferNameOwnership","newOwner","curentNameOwner","registerDomainName","referrerKey","InvalidDomain","cs","derived_state","refIdx","refTokenAccount","ixs","ix","pythFeed","PythFeedNotFound","createSubdomain","subdomain","InvalidSubdomain","ix_create","reverseKey","ix_reverse","burnDomain","transferSubdomain","isParentOwnerSigner","hashedTwitterHandle","twitterHandleRegistryKey","currentVerifiedPubkey","newVerifiedPubkey","instructions","allocateAndPostRecord","SNS_RECORDS_ID","deleteRecord","expectedPubkey","validateEthSignature","Ethereum","filtersRevs","reverses","filtersSubs","subs","dataSlice","revKey","rev","bg","DegenPoet1","Rgb0x001","InvalidCustomBg","customBg","hashedBg","hashedDomain","bgKey","encodedNameArr","names","pubKey","splitGraphemes","favKey","favorite","domainOwner","stale","reverseRegistryState","wallets","favKeys","favDomains","revKeys","atas","domainInfos","revs","tokenAccs","domainInfo","tokenAcc","amount","records","pubkeys","retrievedRecords","retrievedRecord","deserializedContent","registries","nftRecords","filteredAccounts","twitter_handle","MultipleRegistries","serialized","editRecord","staleness","verifier","validateSolanaSignature","recordObj","validation","MissingVerifier","writeRoa"],"mappings":"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"}